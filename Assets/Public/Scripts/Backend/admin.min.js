/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./Assets/Src/Scripts/Base/base_class.js":
/*!***********************************************!*\
  !*** ./Assets/Src/Scripts/Base/base_class.js ***!
  \***********************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ Base_Class; }
/* harmony export */ });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var Base_Class = /*#__PURE__*/function () {
  function Base_Class($) {
    _classCallCheck(this, Base_Class);

    this.sheet_form = $("#gswpts_create_table");
    this.sheet_details = $("#sheet_details");
    this.sheet_container = $("#spreadsheet_container");

    if (this.isProPluginActive()) {
      this.settings_field = $("#show_title, \n                #rows_per_page, \n                #info_block, \n                #responsive, \n                #show_entries, \n                #swap_filter_inputs, \n                #swap_bottom_options, \n                #sorting, \n                #search_table, \n                #table_exporting, \n                #vertical_scrolling,\n                #cell_format,\n                #redirection_type\n                #table_style\n                ");
    } else {
      this.settings_field = $("#show_title, #rows_per_page, #info_block, #show_entries, #swap_filter_inputs, #swap_bottom_options, #sorting, #search_table");
    }
  }

  _createClass(Base_Class, [{
    key: "call_alert",
    value: function call_alert(title, description, type, time) {
      var pos = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : "bottom-right";
      $.suiAlert({
        title: title,
        description: description,
        type: type,
        time: time,
        position: pos
      });
    }
  }, {
    key: "isProPluginActive",
    value: function isProPluginActive() {
      if (file_url.isProActive) {
        return true;
      } else {
        return false;
      }
    }
  }, {
    key: "html_loader",
    value: function html_loader() {
      var loader = "\n               <div class=\"ui segment gswpts_table_loader\">\n                        <div class=\"ui active inverted dimmer\">\n                            <div class=\"ui large text loader\">Loading</div>\n                        </div>\n                        <p></p>\n                        <p></p>\n                        <p></p>\n                </div>\n            ";
      return loader;
    }
  }, {
    key: "sheet_details_html",
    value: function sheet_details_html(res) {
      var details = "\n                <div id=\"sheet_ui_card\" class=\"ui card\" style=\"min-width: 360px;\">\n                    <div class=\"content\">\n                        <div class=\"row\">\n                            <div id=\"shortcode_container\" style=\"display: none !important;\" class=\"col-12 d-flex align-items-center justify-content-center transition hidden\">\n                                <h6 class=\"m-0\" style=\"white-space: nowrap;font-weight: bold;\">Table Shortcode: </h6>\n                                <h6 class=\"m-0 ml-2\">\n                                    <div class=\"ui action input\">\n                                        <input id=\"sortcode_value\" type=\"text\" class=\"copyInput\" value=\"\">\n                                        <button id=\"sortcode_copy\" type=\"button\" name=\"copyToken\" value=\"copy\" class=\"copyToken ui right icon button\">\n                                            <i class=\"clone icon\"></i>\n                                        </button>\n                                    </div>\n                                </h6>\n                            </div>\n                        </div>\n                    </div>\n            </div>\n            ";
      return details;
    }
  }, {
    key: "show_shortcode",
    value: function show_shortcode(shortcode_id) {
      $("#shortcode_container").removeAttr("style");
      $("#shortcode_container").transition("scale");
      $("#sortcode_value").val("[gswpts_table id=".concat(shortcode_id, "]"));
    }
  }, {
    key: "copy_shorcode",
    value: function copy_shorcode(e) {
      var input = $(e.currentTarget).siblings("input");
      input.attr("type", "text");
      input.focus();
      input.select();
      document.execCommand("copy");
      input.attr("type", "hidden");
      this.call_alert("Copied &#128077;", "<b>Sortcode copied successfully</b>", "info", 2);
    }
  }, {
    key: "btn_changer",
    value: function btn_changer(submit_button, text) {
      var reqType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
      submit_button.html("\n                            ".concat(text, "\n                        "));

      if (reqType !== false) {
        submit_button.attr("req-type", reqType);
      }
    }
  }, {
    key: "get_slug_parameter",
    value: function get_slug_parameter(slug) {
      var url = new URL(window.location);
      var params = new URLSearchParams(url.search);
      var retrieve_param = params.get(slug);

      if (retrieve_param) {
        return retrieve_param;
      } else {
        return false;
      }
    }
  }, {
    key: "export_to_json",
    value: function export_to_json(e, target) {
      target.tableHTMLExport({
        type: "json",
        filename: "sample.json"
      });
    }
  }, {
    key: "export_to_csv",
    value: function export_to_csv(e, target) {
      target.tableHTMLExport({
        type: "csv",
        filename: "sample.csv"
      });
    }
  }, {
    key: "export_to_pdf",
    value: function export_to_pdf(e, target) {
      target.tableHTMLExport({
        type: "pdf",
        filename: "sample.pdf"
      });
    }
  }, {
    key: "table_settings_obj",
    value: function table_settings_obj() {
      var settings = {
        table_title: $("#show_title").prop("checked"),
        defaultRowsPerPage: $("#rows_per_page").find("input[name=rows_per_page]").val() == "all" ? -1 : $("#rows_per_page").find("input[name=rows_per_page]").val(),
        showInfoBlock: $("#info_block").prop("checked"),
        showXEntries: $("#show_entries").prop("checked"),
        swapFilterInputs: $("#swap_filter_inputs").prop("checked"),
        swapBottomOptions: $("#swap_bottom_options").prop("checked"),
        allowSorting: $("#sorting").prop("checked"),
        searchBar: $("#search_table").prop("checked")
      };

      if (this.isProPluginActive()) {
        settings.responsiveTable = $("#responsive").prop("checked");
        settings.tableExport = $("#table_exporting").val().split(",") || null;
        settings.verticalScroll = $("#vertical_scrolling").find("input[name=vertical_scrolling]").val();
        settings.cellFormat = $("#cell_format").find("input[name=cell_format]").val();
        settings.redirectionType = $("#redirection_type").find("input[name=redirection_type]").val();
        settings.tableCache = $("#table_cache").prop("checked");
        settings.tableStyle = $("#table_style").val();
      }

      return settings;
    }
  }, {
    key: "default_settings",
    value: function default_settings() {
      var default_settings = {
        table_title: false,
        defaultRowsPerPage: 10,
        showInfoBlock: true,
        responsiveTable: false,
        showXEntries: true,
        swapFilterInputs: false,
        swapBottomOptions: false,
        allowSorting: true,
        searchBar: true,
        tableExport: null,
        verticalScroll: 400,
        cellFormat: "wrap",
        tableCache: false,
        tableStyle: null
      };
      return default_settings;
    }
  }, {
    key: "table_changer",
    value: function table_changer(table_name, table_settings, dom) {
      $("#create_tables").DataTable(this.table_object(table_name, table_settings.defaultRowsPerPage, table_settings.allowSorting, dom, table_settings.verticalScroll));
    }
  }, {
    key: "swap_filter_inputs",
    value: function swap_filter_inputs(state) {
      /* If checkbox is checked then swap filter */
      if (state) {
        $("#filtering_input").css("flex-direction", "row-reverse");
        $("#create_tables_length").css({
          "margin-right": "0",
          "margin-left": "auto"
        });
        $("#create_tables_filter").css({
          "margin-left": "0",
          "margin-right": "auto"
        });
      } else {
        /* Set back to default position */
        $("#filtering_input").css("flex-direction", "row");
        $("#create_tables_length").css({
          "margin-right": "auto",
          "margin-left": "0"
        });
        $("#create_tables_filter").css({
          "margin-left": "auto",
          "margin-right": "0"
        });
      }
    }
  }, {
    key: "swap_bottom_options",
    value: function swap_bottom_options(state) {
      var pagination_menu = $("#bottom_options .pagination.menu");
      var style = {
        flex_direction: "row-reverse",
        table_info_style: {
          margin_right: 0,
          margin_left: "auto"
        },
        table_paginate_style: {
          margin_right: "auto",
          margin_left: 0
        }
      };

      if (state) {
        this.bottom_option_style(style);
      } else {
        style["flex_direction"] = "row";
        style.table_info_style["margin_left"] = 0;
        style.table_info_style["margin_right"] = "auto";
        style.table_paginate_style["margin_left"] = "auto";
        style.table_paginate_style["margin_right"] = 0;
        this.bottom_option_style(style);
      }
    }
  }, {
    key: "overflow_menu_style",
    value: function overflow_menu_style() {
      $("#bottom_options").css("flex-direction", "column");
      $("#create_tables_info").css({
        margin: "5px auto"
      });
      $("#create_tables_paginate").css({
        margin: "5px auto"
      });
    }
  }, {
    key: "bottom_option_style",
    value: function bottom_option_style($arg) {
      $("#bottom_options").css("flex-direction", $arg["flex_direction"]);
      $("#create_tables_info").css({
        "margin-left": $arg["table_info_style"]["margin_left"],
        "margin-right": $arg["table_info_style"]["margin_right"]
      });
      $("#create_tables_paginate").css({
        "margin-left": $arg["table_paginate_style"]["margin_left"],
        "margin-right": $arg["table_paginate_style"]["margin_right"]
      });
    }
  }, {
    key: "export_buttons_row_revealer",
    value: function export_buttons_row_revealer(export_btns) {
      var _this = this;

      if (export_btns) {
        export_btns.forEach(function (btn) {
          setTimeout(function () {
            _this.export_button_revealer_by_other_input(btn);
          }, 300);
        });
      }
    }
  }, {
    key: "export_button_revealer_by_other_input",
    value: function export_button_revealer_by_other_input(btn) {
      if ($("." + btn + "_btn").hasClass("hidden")) {
        $("." + btn + "_btn").transition("scale");
      }
    }
  }, {
    key: "table_object",
    value: function table_object(table_name, pageLength, ordering, dom, verticalScroll) {
      var obj = {
        dom: dom,
        order: [],
        responsive: true,
        lengthMenu: [[1, 5, 10, 15], [1, 5, 10, 15]],
        pageLength: parseInt(pageLength),
        lengthChange: true,
        ordering: ordering,
        destroy: true,
        scrollX: true
      };

      if (this.isProPluginActive()) {
        obj.buttons = [{
          text: "JSON &nbsp;<img src=\"".concat(file_url.iconsURL.curlyBrackets, "\" />"),
          className: "ui inverted yellow button transition hidden json_btn",
          action: function action(e, dt, button, config) {
            var data = dt.buttons.exportData();
            $.fn.dataTable.fileSave(new Blob([JSON.stringify(data)]), "".concat(table_name, ".json"));
          }
        }, {
          text: "PDF &nbsp;<img src=\"".concat(file_url.iconsURL.filePdf, "\" />"),
          extend: "pdf",
          className: "ui inverted red button transition hidden pdf_btn",
          title: "".concat(table_name)
        }, {
          text: "CSV &nbsp;<img src=\"".concat(file_url.iconsURL.fileCSV, "\" />"),
          extend: "csv",
          className: "ui inverted green button transition hidden csv_btn",
          title: "".concat(table_name)
        }, {
          text: "Excel &nbsp;<img src=\"".concat(file_url.iconsURL.fileExcel, "\" />"),
          extend: "excel",
          className: "ui inverted green button transition hidden excel_btn",
          title: "".concat(table_name)
        }, {
          text: "Print &nbsp;<img src=\"".concat(file_url.iconsURL.printIcon, "\" />"),
          extend: "print",
          className: "ui inverted secondary button transition hidden print_btn",
          title: "".concat(table_name)
        }, {
          text: "Copy &nbsp;<img src=\"".concat(file_url.iconsURL.copySolid, "\" />"),
          extend: "copy",
          className: "ui inverted violet button transition hidden copy_btn",
          title: "".concat(table_name)
        }];
        obj.lengthMenu = [[1, 5, 10, 15, 25, 50, 100, -1], [1, 5, 10, 15, 25, 50, 100, "All"]];

        if (verticalScroll != "default") {
          obj.scrollY = "".concat(verticalScroll, "px");
        }
      }

      return obj;
    }
    /* This function will reconfigure tables fields based on data */

  }, {
    key: "reconfigure_input_fields",
    value: function reconfigure_input_fields(settings) {
      $("#show_title").prop("checked", settings.table_title == "true" ? true : false);
      $("#rows_per_page").dropdown("set selected", settings.default_rows_per_page == "-1" ? "all" : settings.default_rows_per_page);
      $("#info_block").prop("checked", settings.show_info_block == "true" ? true : false);
      $("#show_entries").prop("checked", settings.show_x_entries == "true" ? true : false);
      $("#swap_filter_inputs").prop("checked", settings.swap_filter_inputs == "true" ? true : false);
      $("#swap_bottom_options").prop("checked", settings.swap_bottom_options == "true" ? true : false);
      $("#sorting").prop("checked", settings.allow_sorting == "true" ? true : false);
      $("#search_table").prop("checked", settings.search_bar == "true" ? true : false);

      if (this.isProPluginActive()) {
        $("#responsive").prop("checked", settings.responsive_table == "true" ? true : false);
        $("#vertical_scrolling").dropdown("set selected", settings.vertical_scroll);

        if (settings.table_export != "empty" && settings.table_export) {
          settings.table_export.forEach(function (export_type) {
            $("#table_exporting_container").dropdown("set selected", export_type);
          });
        }

        $("#cell_format").dropdown("set selected", settings.cell_format);
        $("#redirection_type").dropdown("set selected", settings.redirection_type);
        $("#table_cache").prop("checked", settings.table_cache == "true" ? true : false);

        if (settings.table_style) {
          $("#table_style").val(settings.table_style);
          $(".styleWrapper").find("label[for=".concat(settings.table_style, "]")).addClass("active");
          this.tableStyle(settings.table_style);
        }
      }
    }
  }, {
    key: "tableStyle",
    value: function tableStyle(_tableStyle) {
      if (file_url.tableStyles) {
        for (var style in file_url.tableStyles) {
          $("#spreadsheet_container").removeClass("gswpts_".concat(style));
        }
      }

      $("#spreadsheet_container").addClass("gswpts_".concat(_tableStyle));
    }
  }, {
    key: "changeCellFormat",
    value: function changeCellFormat(formatStyle, tableSelector) {
      var tableCell = $("".concat(tableSelector, " th, td"));

      switch (formatStyle) {
        case "wrap":
          $.each(tableCell, function (i, cell) {
            $(cell).removeClass("clip_style");
            $(cell).removeClass("expanded_style");
            $(cell).addClass("wrap_style");
          });
          break;

        case "clip":
          $.each(tableCell, function (i, cell) {
            $(cell).removeClass("wrap_style");
            $(cell).removeClass("expanded_style");
            $(cell).addClass("clip_style");
          });
          break;

        case "expand":
          $.each(tableCell, function (i, cell) {
            $(cell).removeClass("clip_style");
            $(cell).removeClass("wrap_style");
            $(cell).addClass("expanded_style");
          });
          break;

        default:
          break;
      }
    }
  }]);

  return Base_Class;
}();



/***/ }),

/***/ "./Assets/Src/Scripts/Chunk/create_google_sheet.js":
/*!*********************************************************!*\
  !*** ./Assets/Src/Scripts/Chunk/create_google_sheet.js ***!
  \*********************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Base_base_class__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../Base/base_class */ "./Assets/Src/Scripts/Base/base_class.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }


jQuery(document).ready(function ($) {
  var Google_Sheets_Creation = /*#__PURE__*/function (_Base_Class) {
    _inherits(Google_Sheets_Creation, _Base_Class);

    var _super = _createSuper(Google_Sheets_Creation);

    function Google_Sheets_Creation() {
      var _this;

      _classCallCheck(this, Google_Sheets_Creation);

      _this = _super.call(this, $);
      _this.fetch_and_save_button = $("#fetch_save_btn");
      _this.sheet_url = "";
      _this.fileInput = $("#file_input");

      _this.events();

      return _this;
    }

    _createClass(Google_Sheets_Creation, [{
      key: "events",
      value: function events() {
        var _this2 = this;

        this.initDropdownSelect();
        this.fileInput.on("input", function (e) {
          _this2.show_fetch_btn(e);
        });
        $(document).on("click", "#fetch_save_btn", function (e) {
          _this2.handle_submit(e);
        });
        $(document).on("click", "#sortcode_copy", function (e) {
          _this2.copy_shorcode(e);
        });
        $(document).on("click", "#create_button", function (e) {
          _this2.clear_fields();
        }); // take user to next settings upon clicking next button

        $(document).on("click", "#next-setting", function (e) {
          _this2.goToNextSetting(e);
        });
        $(".edit_table_name").on("click", function (e) {
          _this2.edit_table_name(e);
        });
      }
    }, {
      key: "initDropdownSelect",
      value: function initDropdownSelect() {
        if ($("#table_type").length) {
          $("#table_type").dropdown();
        }

        if ($("#rows_per_page").length) {
          $("#rows_per_page").dropdown("set selected", "10");
        }

        if ($("#vertical_scrolling").length) {
          $("#vertical_scrolling").dropdown();
        }

        if ($("#cell_format").length) {
          $("#cell_format").dropdown();
        }

        if ($("#redirection_type").length) {
          $("#redirection_type").dropdown();
        }

        $("#table_type").find("input[name=source_type]").val("spreadsheet");
      }
    }, {
      key: "edit_table_name",
      value: function edit_table_name(e) {
        $(e.currentTarget).siblings("input").select();
      }
    }, {
      key: "show_fetch_btn",
      value: function show_fetch_btn(e) {
        if ($("#fetch_save_btn").hasClass("hidden")) {
          $("#fetch_save_btn").transition("scale");
        }
      }
    }, {
      key: "handle_submit",
      value: function handle_submit(e) {
        var _this3 = this;

        e.preventDefault();
        var submit_button = $(e.currentTarget);
        var table_name = $("#table_name").val();
        var form_data = this.sheet_form.serialize();

        if (this.sheet_form.find("input[name=file_input]").val() == "") {
          this.call_alert("Warning &#9888;&#65039;", "<b>Form field is empty. Please fill out the field</b>", "warning", 3);
          return;
        }

        $.ajax({
          url: file_url.admin_ajax,
          data: {
            action: "gswpts_sheet_create",
            form_data: form_data,
            table_name: table_name,
            table_settings: this.table_settings_obj(),
            id: this.get_slug_parameter("id"),
            type: submit_button.attr("req-type")
          },
          type: "post",
          beforeSend: function beforeSend() {
            if (submit_button.attr("req-type") == "fetch") {
              var html = "\n                            Fetching Data &nbsp;\n                            <div class=\"ui active mini inline loader\"></div>\n                        ";

              _this3.btn_changer(submit_button, html, "fetch");

              _this3.sheet_container.html(_this3.html_loader);
            } else {
              var _html = "\n                                Saving Table &nbsp;\n                                <div class=\"ui active mini inline loader\"></div>\n                            ";

              if (submit_button.attr("req-type") == "save_changes") {
                _html = "\n                                Saving Changes &nbsp;\n                                <div class=\"ui active mini inline loader\"></div>\n                            ";
              }

              _this3.btn_changer(submit_button, _html, "save");
            }
          },
          success: function success(res) {
            if (JSON.parse(res).response_type == "invalid_action" || JSON.parse(res).response_type == "invalid_request") {
              _this3.call_alert("Error &#128683;", JSON.parse(res).output, "error", 5);

              _this3.btn_changer(submit_button, "Fetch Data", "fetch");

              _this3.clear_fields();

              _this3.sheet_container.html("");
            }

            if (JSON.parse(res).response_type == "empty_field") {
              _this3.call_alert("Warning &#9888;&#65039;", JSON.parse(res).output, "warning", 3);

              _this3.btn_changer(submit_button, "Fetch Data", "fetch");

              _this3.sheet_container.html("");
            }

            if (JSON.parse(res).response_type == "success") {
              /* Chnage the tabs li attribute text that will effect fetch/save button text */
              $(".tables_settings").attr("data-btn-text", "Save Table");
              /* Chnage the tabs li attribute text that will effect fetch/save button attribute value to save/fetch*/

              $(".tables_settings").attr("data-attr-text", "save");
              /* Remove the disable button atrributes and class */

              $(".disabled_checkbox").removeClass("disabled_checkbox");
              $(".secondary_inputs").attr("disabled", false);

              _this3.sheet_details.transition("scale");

              _this3.sheet_container.parent().removeClass("mt-4").addClass("mt-3");

              _this3.sheet_container.html(JSON.parse(res).output);
            }

            if (JSON.parse(res).response_type == "saved") {
              _this3.btn_changer(submit_button, "Table Saved", "saved");

              _this3.sheet_details.addClass("mt-4 p-0");

              _this3.sheet_details.html(_this3.sheet_details_html(JSON.parse(res)));

              _this3.call_alert("Successfull &#128077;", JSON.parse(res).output, "success", 3);

              var id = Object.values(JSON.parse(res).id)[0];

              _this3.show_shortcode(id);

              _this3.sheet_url = JSON.parse(res).sheet_url;
              $("#create_button").addClass("visible");

              _this3.push_parameter(id); // Add classname as .tables_settings to save table changes


              $("#gswpts_tabs ul li").addClass("tables_settings");
            }

            if (JSON.parse(res).response_type == "updated") {
              var html = "\n                                Save Changes\n                            ";

              _this3.btn_changer(submit_button, html, "save_changes");

              _this3.call_alert("Successfull &#128077;", JSON.parse(res).output, "success", 3);
            }

            if (JSON.parse(res).response_type == "sheet_exists") {
              _this3.call_alert("Warning &#9888;&#65039;", JSON.parse(res).output, "warning", 3);

              _this3.btn_changer(submit_button, "Save Table", "save");
            }
          },
          complete: function complete(res) {
            if (JSON.parse(res.responseText).response_type == "success") {
              var default_settings = _this3.default_settings();

              var _table_name = $("#table_name").val();

              var defaultRowsPerPage = default_settings.defaultRowsPerPage;
              var allowSorting = default_settings.allowSorting;
              var dom = '<"#filtering_input"lf>rt<"#bottom_options"ip>';

              if (_this3.isProPluginActive()) {
                dom = 'B<"#filtering_input"lf>rt<"#bottom_options"ip>';
              }

              $("#create_tables").DataTable(_this3.table_object(_table_name, defaultRowsPerPage, allowSorting, dom));

              _this3.changeBtnOnCondition(submit_button);

              submit_button.css({
                backgroundColor: "#f2711c"
              });
              setTimeout(function () {
                _this3.call_alert("Successfull &#128077;", "<b>Google Sheet data fetched successfully</b>", "success", 3);

                if (!_this3.isProPluginActive()) {
                  _this3.call_alert("Warning &#9888;&#65039;", "<b>Live sync is limited to 20 rows.<br/><a target='blank' href='https://wppool.dev/sheets-to-wp-table-live-sync/'>Upgrade to Pro</a> for showing full google sheet.</b>", "warning", 10);
                }
              }, 700);
            }
          },
          error: function error(err) {
            _this3.call_alert("Error &#128683;", "<b>Something went wrong</b>", "error", 3);

            _this3.btn_changer(submit_button, "Fetch Data", "fetch");

            _this3.sheet_container.html("");
          }
        });
      }
    }, {
      key: "changeBtnOnCondition",
      value: function changeBtnOnCondition(submit_button) {
        if (!this.get_slug_parameter("id")) {
          this.btn_changer(submit_button, "Next Setting", "next");
          submit_button.css({
            backgroundColor: "#f2711c"
          });
          submit_button.attr("id", "next-setting");
        } else {
          this.btn_changer(submit_button, "Save Table", "save");
        }
      }
    }, {
      key: "goToNextSetting",
      value: function goToNextSetting(e) {
        var target = $(e.currentTarget);
        var tabInputs = $("#gswpts_tabs .tabs > input:checked");

        if (tabInputs.attr("id") == "tab3") {
          tabInputs.prop("checked", false);
          tabInputs.next().prop("checked", true);
          this.btn_changer(target, "Save Table", "save");
          target.css({
            backgroundColor: "#6435c9"
          });
          target.attr("id", "fetch_save_btn");
        } else {
          tabInputs.prop("checked", false);
          tabInputs.next().prop("checked", true);
        }
      }
    }, {
      key: "copy_shorcode",
      value: function copy_shorcode(e) {
        var input = $(e.currentTarget).siblings("input");
        input.focus();
        input.select();
        document.execCommand("copy");
        this.call_alert("Copied &#128077;", "Sortcode copied successfully", "info", 2);
      }
    }, {
      key: "clear_fields",
      value: function clear_fields() {
        var _this4 = this;

        this.sheet_form.find("input[name=file_input]").val("");
        $(".edit_table_name").attr("disabled", false);
        $("#table_name").val("GSWPTS Table");
        $("#table_name").attr("disabled", false);
        $("#tab1").prop("checked", true);
        /* add the disable button atrributes and class */

        $("#gswpts_tabs ul li:not(:nth-child(1))").addClass("disabled_checkbox");
        $(".tables_settings").unbind("click");
        $(".secondary_inputs").attr("disabled", true);
        $("#sheet_ui_card").transition("scale");
        $("#create_tables_wrapper").transition("scale");
        this.btn_changer($("#fetch_save_btn"), "Fetch Data", "fetch");
        this.deleteParameter(); // reveal table name input

        $(".input_fields > div:nth-child(2)").removeClass("hide-column");
        $(".input_fields > div:nth-child(2) > div").removeClass("hidden");
        $(".input_fields > div:nth-child(3)").removeClass("col-md-9").addClass("col-md-6");
        setTimeout(function () {
          _this4.sheet_details.transition("scale");

          $("#sheet_ui_card").remove();
          $("#create_tables_wrapper").remove();
        }, 300);
      }
    }, {
      key: "push_parameter",
      value: function push_parameter(id) {
        var url = new URL(window.location);
        url.searchParams.set("id", id);
        window.history.pushState({}, "", url);
      }
    }, {
      key: "deleteParameter",
      value: function deleteParameter() {
        var url = new URL(window.location);
        url.searchParams.set("id", "");
        window.history.pushState({}, "", url);
      }
    }]);

    return Google_Sheets_Creation;
  }(_Base_base_class__WEBPACK_IMPORTED_MODULE_0__.default);

  new Google_Sheets_Creation();
});

/***/ }),

/***/ "./Assets/Src/Scripts/Chunk/documentation.js":
/*!***************************************************!*\
  !*** ./Assets/Src/Scripts/Chunk/documentation.js ***!
  \***************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Base_base_class__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Base/base_class */ "./Assets/Src/Scripts/Base/base_class.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }


jQuery(document).ready(function ($) {
  var Dashboard = /*#__PURE__*/function (_Base_Class) {
    _inherits(Dashboard, _Base_Class);

    var _super = _createSuper(Dashboard);

    function Dashboard() {
      var _this;

      _classCallCheck(this, Dashboard);

      _this = _super.call(this, $);
      _this.sortcode_copy_btn = $(".dashboard_sortcode_copy_btn");
      _this.form = $("#subscriber-form");

      _this.events();

      return _this;
    }

    _createClass(Dashboard, [{
      key: "events",
      value: function events() {
        var _this2 = this;

        this.sortcode_copy_btn.on("click", function (e) {
          _this2.copy_shorcode(e);
        });

        if (this.get_slug_parameter("page") == "gswpts-recommendation") {
          this.retrieve_other_products();
        }
      }
    }, {
      key: "retrieve_other_products",
      value: function retrieve_other_products() {
        var _this3 = this;

        $.ajax({
          url: file_url.admin_ajax,
          data: {
            action: "gswpts_product_fetch"
          },
          type: "post",
          beforeSend: function beforeSend() {
            $(".other_products_section").html("\n                             <div class=\"ui segment gswpts_loader\" style=\"width: 100%;\">\n                                    <div class=\"ui active inverted dimmer\">\n                                        <div class=\"ui massive text loader\"></div>\n                                    </div>\n                                    <p></p>\n                                    <p></p>\n                                    <p></p>\n                            </div>\n                    ");
          },
          success: function success(res) {
            console.log(res);
            $(".other_products_section").html(res);
          },
          error: function error(err) {
            $(".other_products_section").html("");

            _this3.call_alert("Error &#128683;", "<b>Something went wrong on fetching related products</b>", "error", 3);
          }
        });
      }
    }]);

    return Dashboard;
  }(_Base_base_class__WEBPACK_IMPORTED_MODULE_0__.default);

  new Dashboard();
});

/***/ }),

/***/ "./Assets/Src/Scripts/Chunk/fetch_sheet_data.js":
/*!******************************************************!*\
  !*** ./Assets/Src/Scripts/Chunk/fetch_sheet_data.js ***!
  \******************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Base_base_class__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../Base/base_class */ "./Assets/Src/Scripts/Base/base_class.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }


jQuery(document).ready(function ($) {
  var Fetch_Sheet_Data = /*#__PURE__*/function (_Base_Class) {
    _inherits(Fetch_Sheet_Data, _Base_Class);

    var _super = _createSuper(Fetch_Sheet_Data);

    function Fetch_Sheet_Data() {
      var _this;

      _classCallCheck(this, Fetch_Sheet_Data);

      _this = _super.call(this, $);

      _this.events();

      return _this;
    }

    _createClass(Fetch_Sheet_Data, [{
      key: "events",
      value: function events() {
        this.fetch_data_by_id();
      }
    }, {
      key: "fetch_data_by_id",
      value: function fetch_data_by_id() {
        var _this2 = this;

        if (!this.get_slug_parameter("id")) {
          return;
        }

        $.ajax({
          url: file_url.admin_ajax,
          data: {
            action: "gswpts_sheet_fetch",
            id: this.get_slug_parameter("id")
          },
          type: "post",
          beforeSend: function beforeSend() {
            $("#tab1").prop("checked", true);
            $("#gswpts_tabs ul li:not(:nth-child(1))").addClass("disabled_checkbox");
          },
          success: function success(res) {
            if (JSON.parse(res).response_type == "invalid_action" || JSON.parse(res).response_type == "invalid_request") {
              _this2.sheet_container.html("");

              _this2.call_alert("Error &#128683;", JSON.parse(res).output, "error", 4);
            }

            if (JSON.parse(res).response_type == "success") {
              _this2.sheet_details.addClass("mt-4 p-0");

              $("#gswpts_tabs ul li:not(:nth-child(1))").removeClass("disabled_checkbox");
              setTimeout(function () {
                $(".edit_table_name").siblings("input[name=table_name]").val(JSON.parse(res).table_data.table_name);
                $(".edit_table_name").parent().transition("fade up");
                $("#table_type").dropdown("set selected", JSON.parse(res).table_data.source_type);

                _this2.sheet_form.find("input[name=file_input]").val(JSON.parse(res).table_data.source_url);

                _this2.sheet_details.html(_this2.sheet_details_html(JSON.parse(res)));

                _this2.sheet_details.transition("scale");

                _this2.show_shortcode(_this2.get_slug_parameter("id"));
              }, 400);

              _this2.sheet_container.html(JSON.parse(res).output);
            }
          },
          error: function error(err) {
            _this2.call_alert("Error &#128683;", "<b>Something went wrong</b>", "error", 3);

            _this2.sheet_container.html("");
          },
          complete: function complete(res) {
            if (JSON.parse(res.responseText).response_type == "success") {
              var table_settings = JSON.parse(JSON.parse(res.responseText).table_data.table_settings);
              var table_name = JSON.parse(res.responseText).table_data.table_name;
              var dom = "<\"#filtering_input\"".concat(table_settings.show_x_entries == "true" ? "l" : "").concat(table_settings.search_bar == "true" ? "f" : "", ">rt<\"#bottom_options\"").concat(table_settings.show_info_block == "true" ? "i" : "", "p>");

              if (_this2.isProPluginActive()) {
                dom = "B<\"#filtering_input\"".concat(table_settings.show_x_entries == "true" ? "l" : "").concat(table_settings.search_bar == "true" ? "f" : "", ">rt<\"#bottom_options\"").concat(table_settings.show_info_block == "true" ? "i" : "", "p>");
              }

              var swap_filter_inputs = table_settings.swap_filter_inputs == "true" ? true : false;
              var swap_bottom_options = table_settings.swap_bottom_options == "true" ? true : false;
              /* This will trigger the change event and its related functionality in table_changes.js  */

              _this2.reconfigure_input_fields(JSON.parse(JSON.parse(res.responseText).table_data.table_settings));

              setTimeout(function () {
                $("#create_tables").DataTable(_this2.table_object(table_name, table_settings.default_rows_per_page, table_settings.allow_sorting == "true" ? true : false, dom, table_settings.vertical_scroll));

                _this2.swap_filter_inputs(swap_filter_inputs);

                _this2.swap_bottom_options(swap_bottom_options);

                if (table_settings.table_export != "empty") {
                  _this2.export_buttons_row_revealer(table_settings.table_export);
                }

                _this2.show_fetch_btn();

                _this2.call_alert("Successfull &#128077;", "<b>Google Sheet data fetched successfully</b>", "success", 3);

                if (!_this2.isProPluginActive()) {
                  _this2.call_alert("Warning &#9888;&#65039;", "<b>Live sync is limited to 20 rows.<br/><a target='blank' href='https://wppool.dev/sheets-to-wp-table-live-sync/'>Upgrade to Pro</a> for showing full google sheet.</b>", "warning", 10);
                }
              }, 200);
            }
          }
        });
      }
    }, {
      key: "show_fetch_btn",
      value: function show_fetch_btn() {
        if ($("#fetch_save_btn").hasClass("hidden")) {
          $("#fetch_save_btn").transition("scale");
        }
      }
    }]);

    return Fetch_Sheet_Data;
  }(_Base_base_class__WEBPACK_IMPORTED_MODULE_0__.default);

  new Fetch_Sheet_Data();
});

/***/ }),

/***/ "./Assets/Src/Scripts/Chunk/general_settings.js":
/*!******************************************************!*\
  !*** ./Assets/Src/Scripts/Chunk/general_settings.js ***!
  \******************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Base_base_class__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Base/base_class */ "./Assets/Src/Scripts/Base/base_class.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }


jQuery(document).ready(function ($) {
  var General_settings = /*#__PURE__*/function (_Base_Class) {
    _inherits(General_settings, _Base_Class);

    var _super = _createSuper(General_settings);

    function General_settings() {
      var _this;

      _classCallCheck(this, General_settings);

      _this = _super.call(this, $);
      _this.settings_checkbox = $(".settings_row input[type=checkbox]");
      _this.pro_settings = $(".pro_setting");
      _this.large_promo_close = $(".large_promo_close");

      _this.events();

      return _this;
    }

    _createClass(General_settings, [{
      key: "events",
      value: function events() {
        var _this2 = this;

        this.settings_checkbox.on("change", function (e) {
          var target = $(e.currentTarget);
          var desc_box = target.parents(".card").find(".settings_desc"); // remove the restriction of css code editor

          if (target.attr("id") == "custom_css") {
            _this2.removeCodeEditorRestriction(target);
          }
        });
        this.pro_settings.on("click", function (e) {
          _this2.activate_promo(e);
        });
        this.large_promo_close.on("click", function (e) {
          _this2.close_promo(e);
        });

        if (this.get_slug_parameter("page") == "gswpts-general-settings") {
          this.initiateCodeEditor();
        }
      }
    }, {
      key: "removeCodeEditorRestriction",
      value: function removeCodeEditorRestriction(target) {
        var codeEditor = target.parents(".card").find("#gswptsCSSeditor");

        if (target.prop("checked")) {
          codeEditor.css({
            opacity: "1",
            "pointer-events": "all"
          });
        } else {
          codeEditor.css({
            opacity: "0.5",
            "pointer-events": "none"
          });
        }
      }
    }, {
      key: "initiateCodeEditor",
      value: function initiateCodeEditor() {
        var aceEditor = ace.edit("gswptsCSSeditor", {
          selectionStyle: "text"
        });
        var cssCodeValueContainer = $("#css_code_value");
        aceEditor.setOptions({
          enableBasicAutocompletion: true,
          // the editor completes the statement when you hit Ctrl + Space
          enableLiveAutocompletion: true,
          // the editor completes the statement while you are typing
          showPrintMargin: false,
          // hides the vertical limiting strip
          maxLines: Infinity,
          fontSize: "100%" // ensures that the editor fits in the environment

        }); // defines the style of the editor

        aceEditor.setTheme("ace/theme/vibrant_ink");
        aceEditor.renderer.setOption("showLineNumbers", true);
        aceEditor.getSession().setUseWrapMode(true);
        aceEditor.setShowPrintMargin(false);
        aceEditor.setOptions({
          autoScrollEditorIntoView: true
        });
        aceEditor.setOption("mergeUndoDeltas", "always");
        aceEditor.getSession().setMode("ace/mode/css");
        aceEditor.setValue(cssCodeValueContainer.val());
        aceEditor.clearSelection();
        aceEditor.on("change", function (event) {
          var cssValue = aceEditor.getValue();
          cssCodeValueContainer.val(cssValue);
        });
      }
    }, {
      key: "show_settings_desc",
      value: function show_settings_desc(target) {
        if (target.hasClass("pro_setting")) return;
        var desc_box = target.parents(".card").find(".settings_desc");
        desc_box.transition("fade down");
      }
    }, {
      key: "activate_promo",
      value: function activate_promo(e) {
        var target = $(e.currentTarget);
        target.prop("checked", false);
        this.changeButtonTextLinks(e);
        var promo = target.parents(".dash_boxes").find(".promo_large");
        promo.addClass("active");
        promo.css({
          opacity: 1
        });
      }
    }, {
      key: "changeButtonTextLinks",
      value: function changeButtonTextLinks(e) {
        var target = $(e.currentTarget);
        var promoBtn = target.parents(".dash_boxes").find(".promo_large .promo_inner a");

        if (!target.hasClass("upcoming_setting")) {
          promoBtn.html("Buy now");
        } else {
          promoBtn.html("Upcoming");
        }
      }
    }, {
      key: "close_promo",
      value: function close_promo(e) {
        var target = $(e.currentTarget);
        var promo = target.parents(".promo_large");
        promo.removeClass("active");
        promo.css({
          opacity: 0
        });
      }
    }]);

    return General_settings;
  }(_Base_base_class__WEBPACK_IMPORTED_MODULE_0__.default);

  new General_settings();
});

/***/ }),

/***/ "./Assets/Src/Scripts/Chunk/manage_tables.js":
/*!***************************************************!*\
  !*** ./Assets/Src/Scripts/Chunk/manage_tables.js ***!
  \***************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Base_base_class__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../Base/base_class */ "./Assets/Src/Scripts/Base/base_class.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }


jQuery(document).ready(function ($) {
  var Manage_Tables = /*#__PURE__*/function (_Base_Class) {
    _inherits(Manage_Tables, _Base_Class);

    var _super = _createSuper(Manage_Tables);

    function Manage_Tables() {
      var _this;

      _classCallCheck(this, Manage_Tables);

      _this = _super.call(this, $);
      _this.table_container = $("#gswpts_tables_container");
      _this.checkbox_switcher = false;

      _this.events();

      return _this;
    }

    _createClass(Manage_Tables, [{
      key: "events",
      value: function events() {
        var _this2 = this;

        this.fetch_data_by_page();
        $(document).on("click", ".gswpts_sortcode_copy", function (e) {
          _this2.copy_shorcode(e);

          _this2.higlightSortcodeText(e);
        });
        $(document).on("click", "#manage_tables_checkbox", function (e) {
          _this2.toggle_content(e);
        });
      }
    }, {
      key: "higlightSortcodeText",
      value: function higlightSortcodeText(e) {
        // implement plan js to highlight text
        var node = $(e.currentTarget)[0];

        if (document.body.createTextRange) {
          var range = document.body.createTextRange();
          range.moveToElementText(node);
          range.select();
        } else if (window.getSelection) {
          var selection = window.getSelection();

          var _range = document.createRange();

          _range.selectNodeContents(node);

          selection.removeAllRanges();
          selection.addRange(_range);
        } else {
          console.warn("Could not select text in node: Unsupported browser.");
        }
      }
    }, {
      key: "fetch_data_by_page",
      value: function fetch_data_by_page() {
        var _this3 = this;

        if (!this.get_slug_parameter("page") || this.get_slug_parameter("page") !== "gswpts-dashboard" || this.get_slug_parameter("subpage") == "create-table") {
          return;
        }

        $.ajax({
          url: file_url.admin_ajax,
          data: {
            action: "gswpts_table_fetch",
            page_slug: this.get_slug_parameter("page")
          },
          type: "post",
          success: function success(res) {
            if (JSON.parse(res).response_type == "invalid_action" || JSON.parse(res).response_type == "invalid_request") {
              _this3.table_container.html("");

              _this3.call_alert("Error &#128683;", JSON.parse(res).output, "error", 4);
            }

            if (JSON.parse(res).response_type == "success") {
              _this3.table_container.html(JSON.parse(res).output);
            }
          },
          error: function error(err) {
            _this3.call_alert("Error &#128683;", "<b>Something went wrong</b>", "error", 3);

            _this3.sheet_container.html("");
          },
          complete: function complete(res) {
            if (JSON.parse(res.responseText).response_type == "success") {
              $("#manage_tables").DataTable({
                columnDefs: [{
                  targets: [0, 5],
                  orderable: false
                }],
                bInfo: false,
                order: []
              });
              setTimeout(function () {
                if (JSON.parse(res.responseText).no_data == "true") {
                  _this3.call_alert("Warning &#9888;&#65039;", "<b>No tables found. Create a new</b>", "warning", 3);
                } else {
                  _this3.call_alert("Successfull &#128077;", "<b>All Tables Fetched Successfully</b>", "success", 3);
                }
              }, 700);
            }
          }
        });
      }
    }, {
      key: "toggle_content",
      value: function toggle_content(e) {
        if ($(e.currentTarget).attr("data-show") == "false") {
          $("#delete_button").transition("scale");
          this.check_all_checkbox();
          this.checkbox_switcher = true;
        }

        if ($(e.currentTarget).attr("data-show") == "true") {
          $("#delete_button").transition("scale");
          setTimeout(function () {}, 300);
          this.uncheck_all_checkbox();
          this.checkbox_switcher = false;
        }

        $(e.currentTarget).attr("data-show", "" + this.checkbox_switcher + "");
      }
    }, {
      key: "check_all_checkbox",
      value: function check_all_checkbox() {
        $(".manage_tables_checkbox").prop("checked", true);
      }
    }, {
      key: "uncheck_all_checkbox",
      value: function uncheck_all_checkbox() {
        $(".manage_tables_checkbox").prop("checked", false);
      }
    }]);

    return Manage_Tables;
  }(_Base_base_class__WEBPACK_IMPORTED_MODULE_0__.default);

  new Manage_Tables();
});

/***/ }),

/***/ "./Assets/Src/Scripts/Chunk/table_changes.js":
/*!***************************************************!*\
  !*** ./Assets/Src/Scripts/Chunk/table_changes.js ***!
  \***************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Base_base_class__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../Base/base_class */ "./Assets/Src/Scripts/Base/base_class.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }


jQuery(document).ready(function ($) {
  var Table_Changes = /*#__PURE__*/function (_Base_Class) {
    _inherits(Table_Changes, _Base_Class);

    var _super = _createSuper(Table_Changes);

    function Table_Changes() {
      var _this;

      _classCallCheck(this, Table_Changes);

      _this = _super.call(this, $);
      _this.promo_close_btn = $(".promo_close_btn");
      _this.pro_feature_input = $(".pro_feature_input");
      _this.chooseStyle = $(".chooseStyle").parents(".card");
      _this.tableStyleActionBtn = $(".styleModal .svg_icons, .styleModal .actions > .button");
      _this.tableStylesInput = $(".styleModal .body input");

      _this.events();

      return _this;
    }

    _createClass(Table_Changes, [{
      key: "events",
      value: function events() {
        var _this2 = this;

        $(document).on("click", ".tables_settings", function (e) {
          _this2.change_btn_text(e);
        });
        $(document).on("click", "#gswpts_tabs .tabs > input", function (e) {
          _this2.changeBtnOnCondition(e);
        });
        this.add_select_box_style();
        this.settings_field.on("change", function (e) {
          _this2.update_table_by_changes(e);
        });
        this.pro_feature_input.on("click", function (e) {
          _this2.pro_feature_popup(e);
        });
        this.promo_close_btn.on("click", function (e) {
          _this2.close_promo_popup(e);
        });
        this.chooseStyle.on("click", function (e) {
          $(".tableStyleModal").addClass("active");
          $(".styleModal").transition("scale");
          $(".styleModal").css({
            "margin-top": "".concat($(document).scrollTop() + 100, "px")
          });
        });
        this.tableStyleActionBtn.on("click", function (e) {
          var target = $(e.currentTarget);
          $(".tableStyleModal").removeClass("active");
          $(".styleModal").transition("scale"); // set data to input value for saving into database

          if (_this2.isProPluginActive()) {
            if (target.hasClass("selectBtn")) {
              var selectedTableStyle = $(".styleModal .body label.active input");
              $("#table_style").val(selectedTableStyle.val()); // Changing the table style

              _this2.tableStyle(selectedTableStyle.val());
            }
          }
        });
        this.tableStylesInput.on("click", function (e) {
          // activate border color
          var target = $(e.currentTarget);
          $(".styleModal .body label").removeClass("active");
          target.parent().toggleClass("active"); // activate promo if unlocked

          $(".styleModal .body label .pro_feature_promo").removeClass("active");
          target.parent().find(".pro_feature_promo").addClass("active");
        });
      }
    }, {
      key: "changeBtnOnCondition",
      value: function changeBtnOnCondition(e) {
        if (!this.get_slug_parameter("id")) {
          if ($(e.currentTarget).attr("id") == "tab4") {
            this.btnAttAndTextChanger({
              selector: "#next-setting",
              btnText: "Save Table",
              btnAttribute: "save",
              btnBackgroundColor: "#6435c9",
              btnId: "fetch_save_btn"
            });
          } else {
            this.btnAttAndTextChanger({
              selector: "#fetch_save_btn",
              btnText: "Next Setting",
              btnAttribute: "next",
              btnBackgroundColor: "#f2711c",
              btnId: "next-setting"
            });
          }
        }
      }
    }, {
      key: "btnAttAndTextChanger",
      value: function btnAttAndTextChanger(arg) {
        var target = $(arg.selector);
        this.btn_changer(target, arg.btnText, arg.btnAttribute);
        target.css({
          backgroundColor: arg.btnBackgroundColor
        });
        target.attr("id", arg.btnId);
      }
    }, {
      key: "change_btn_text",
      value: function change_btn_text(e) {
        var btn_text_value = $(e.currentTarget).attr("data-btn-text");
        var btn_attr_value = $(e.currentTarget).attr("data-attr-text");
        $("#fetch_save_btn").html(btn_text_value);
        $("#fetch_save_btn").attr("req-type", btn_attr_value);
      }
    }, {
      key: "add_select_box_style",
      value: function add_select_box_style() {
        if ($("#rows_per_page").length) {
          $("#rows_per_page").dropdown();
        }

        if ($("#table_exporting_container").length) {
          $("#table_exporting_container").dropdown();
        }
      }
    }, {
      key: "update_table_by_changes",
      value: function update_table_by_changes(e) {
        var _this3 = this;

        var table_name = $(".edit_table_name").siblings("input[name=table_name]").val();
        var table_settings = this.table_settings_obj();

        if ($(e.currentTarget).attr("id") == "table_exporting" && this.isProPluginActive()) {
          var export_btn = ["json", "pdf", "csv", "excel", "print", "copy"];
          export_btn.forEach(function (btn) {
            _this3.button_reavealer(e, btn);
          });
        }

        if ($(e.currentTarget).attr("id") == "show_title" || "responsive" || "search_table" || "rows_per_page" || "sorting" || "show_entries" || "info_block" || "vertical_scrolling" || "cell_format") {
          if (this.isProPluginActive()) {
            this.export_buttons_row_revealer(table_settings.tableExport);
            this.changeCellFormat(table_settings.cellFormat, "#spreadsheet_container");
          }

          this.reFormatTable();
          this.swap_filter_inputs(table_settings.swapFilterInputs);
          this.swap_bottom_options(table_settings.swapBottomOptions);
        }
        /* Swaping Filter Inputs */


        if ($(e.currentTarget).attr("id") == "swap_filter_inputs") {
          this.swap_filter_inputs($(e.currentTarget).prop("checked"));
        }
        /* Swaping bottom elemts */


        if ($(e.currentTarget).attr("id") == "swap_bottom_options") {
          this.swap_bottom_options($(e.currentTarget).prop("checked"));
        } // Changing the link redirection type


        if (this.isProPluginActive()) {
          if ($(e.currentTarget).attr("id") == "redirection_type") {
            this.changeRedirectionType(table_settings.redirectionType);
          }
        }
      }
    }, {
      key: "reFormatTable",
      value: function reFormatTable() {
        var table_settings = this.table_settings_obj();
        var dom = "<\"#filtering_input\"".concat(table_settings.showXEntries ? "l" : "").concat(table_settings.searchBar ? "f" : "", ">rt<\"#bottom_options\"").concat(table_settings.showInfoBlock ? "i" : "", "p>");

        if (this.isProPluginActive()) {
          dom = "B<\"#filtering_input\"".concat(table_settings.showXEntries ? "l" : "").concat(table_settings.searchBar ? "f" : "", ">rt<\"#bottom_options\"").concat(table_settings.showInfoBlock ? "i" : "", "p>");
        }

        var table_name = $(".edit_table_name").siblings("input[name=table_name]").val();
        this.table_changer(table_name, table_settings, dom);
      }
    }, {
      key: "changeRedirectionType",
      value: function changeRedirectionType(type) {
        var links = $("#create_tables a");
        if (!links.length) return;
        $.each(links, function (i, link) {
          $(link).attr("target", type);
        });
      }
      /* Show the export buttons based on user selection */

    }, {
      key: "button_reavealer",
      value: function button_reavealer(e, target) {
        if ($(e.currentTarget).val().includes(target)) {
          if ($("." + target + "_btn").hasClass("hidden")) {
            $("." + target + "_btn").transition("scale");
            return;
          }
        } else {
          if ($("." + target + "_btn").hasClass("visible")) {
            $("." + target + "_btn").transition("scale");
            return;
          }
        }
      }
    }, {
      key: "set_default",
      value: function set_default() {
        var default_settings = this.default_settings();
        $.each(this.settings, function (index, value) {
          if ($(value).attr("id") == "show_title") {
            $(value).prop("checked", default_settings.table_title);
          }

          if ($(value).attr("id") == "responsive") {
            $(value).prop("checked", default_settings.responsiveTable);
          }

          if ($(value).attr("id") == "search_table") {
            $(value).prop("checked", default_settings.searchBar);
          }

          if ($(value).attr("id") == "show_entries") {
            $(value).prop("checked", default_settings.showXEntries);
          }

          if ($(value).attr("id") == "info_block") {
            $(value).prop("checked", default_settings.showInfoBlock);
          }

          if ($(value).attr("id") == "swap_filter_inputs") {
            $(value).prop("checked", default_settings.swapFilterInputs);
          }

          if ($(value).attr("id") == "swap_bottom_options") {
            $(value).prop("checked", default_settings.swapBottomOptions);
          }
        });
      }
    }, {
      key: "pro_feature_popup",
      value: function pro_feature_popup(e) {
        var target = $(e.currentTarget);
        var promo = target.parents(".gswpts_create_table_container").find(".promo_large");
        promo.css({
          opacity: 1
        });
        promo.find(".popup-box").css({
          "margin-top": "".concat($(document).scrollTop() + 50, "px")
        });
        promo.addClass("active");
        target.prop("checked", false);
      }
    }, {
      key: "close_promo_popup",
      value: function close_promo_popup(e) {
        var target = $(e.currentTarget);
        var promo = target.parents(".card").find(".pro_feature_promo");
        promo.removeClass("active");
      }
    }]);

    return Table_Changes;
  }(_Base_base_class__WEBPACK_IMPORTED_MODULE_0__.default);

  new Table_Changes();
});

/***/ }),

/***/ "./Assets/Src/Scripts/Chunk/ud_tables.js":
/*!***********************************************!*\
  !*** ./Assets/Src/Scripts/Chunk/ud_tables.js ***!
  \***********************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Base_base_class__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Base/base_class */ "./Assets/Src/Scripts/Base/base_class.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }


jQuery(document).ready(function ($) {
  var UD_tables = /*#__PURE__*/function (_Base_Class) {
    _inherits(UD_tables, _Base_Class);

    var _super = _createSuper(UD_tables);

    function UD_tables() {
      var _this;

      _classCallCheck(this, UD_tables);

      _this = _super.call(this, $);
      _this.deleteBtn = $("#delete_button");

      _this.events();

      return _this;
    }

    _createClass(UD_tables, [{
      key: "events",
      value: function events() {
        var _this2 = this;

        $(document).on("click", ".gswpts_edit_table", function (e) {
          _this2.edit_table_name(e);
        });
        $(document).on("click", ".table_name_save", function (e) {
          _this2.update_table_name(e);

          _this2.edit_tag_value(e);
        });
        $(document).on("click", ".semntic-popup-modal .actions > .yes-btn", function (e) {
          var id = $(e.currentTarget).attr("data-id");

          _this2.delete_table(id);
        });
        $(document).on("click", ".gswpts_table_delete_btn", function (e) {
          var id = $(e.currentTarget).attr("data-id");

          _this2.initiatePopup({
            deleteAll: false,
            id: id
          }, e);
        });
        this.deleteBtn.on("click", function (e) {
          _this2.initiatePopup({
            deleteAll: true
          }, e);
        });
      }
    }, {
      key: "initiatePopup",
      value: function initiatePopup(arg, e) {
        var _this3 = this;

        var popupModal = $(".semntic-popup-modal");
        popupModal.modal("show");

        if (arg.deleteAll == false) {
          $(".semntic-popup-modal .actions > .yes-btn").attr("data-id", arg.id);
        } // implementing plain javascript for resolving (this) keyword conflict issue


        document.querySelector(".semntic-popup-modal .actions > .yes-btn").addEventListener("click", function () {
          if (arg.deleteAll) {
            _this3.delete_all_table(e);
          }
        });
      }
    }, {
      key: "update_table_name",
      value: function update_table_name(e) {
        var table_name = $(e.currentTarget).parent().parent().find(".table_name").text();
        var data = {
          reqType: "update",
          table_id: $(e.currentTarget).attr("id"),
          table_name: table_name
        };
        console.log(data);
        this.ajax_request(data, e);
      }
    }, {
      key: "delete_table",
      value: function delete_table(id) {
        var data = {
          reqType: "delete",
          table_id: id
        };
        this.ajax_request(data);
      }
    }, {
      key: "delete_all_table",
      value: function delete_all_table(e) {
        var allCheckBox = $("input[name='manage_tables_checkbox']:checked");
        var data = {
          reqType: "deleteAll"
        };
        var table_ids = [];
        $.each(allCheckBox, function (indexInArray, valueOfElement) {
          table_ids.push($(valueOfElement).val());
        });
        data.table_ids = table_ids;

        if (data.table_ids.length > 0) {
          this.ajax_request(data, e);
        } else {
          this.call_alert("Warning &#9888;&#65039;", "<b>No table is selected to delete</b>", "warning", 3);
          return;
        }
      }
    }, {
      key: "ajax_request",
      value: function ajax_request(data) {
        var _this4 = this;

        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
        var currentTarget;

        if (e == null) {
          currentTarget = $("#table-".concat(data.table_id));
        } else {
          currentTarget = $(e.currentTarget);
        }

        $.ajax({
          url: file_url.admin_ajax,
          data: {
            action: "gswpts_ud_table",
            data: data
          },
          type: "post",
          beforeSend: function beforeSend() {
            if (data.reqType == "update") {
              currentTarget.html("\n                        <div class=\"ui active mini inline loader\"></div>\n                    ");
            }

            if (data.reqType == "delete") {
              currentTarget.html("\n                        Deleting &nbsp;\n                        <div class=\"ui active mini inline loader\"></div>\n                    ");
            }

            if (data.reqType == "deleteAll") {
              currentTarget.html("\n                        Deleting &nbsp;\n                        <div class=\"ui active mini inline loader\"></div>\n                    ");
            }
          },
          success: function success(res) {
            console.log(res);

            if (JSON.parse(res).response_type == "invalid_action" || JSON.parse(res).response_type == "invalid_request") {
              _this4.call_alert("Error &#128683;", JSON.parse(res).output, "error", 4);
            }

            if (JSON.parse(res).response_type == "updated") {
              currentTarget.html("\n                            <img src=\"".concat(file_url.renameIcon, "\" width=\"24px\" height=\"15px\" alt=\"rename-icon\"/>\n                        "));

              _this4.call_alert("Successfull &#128077;", JSON.parse(res).output, "success", 3);
            }

            if (JSON.parse(res).response_type == "deleted") {
              currentTarget.html("Deleted");
              currentTarget.parent().parent().transition("fade");

              _this4.call_alert("Successfull &#128077;", JSON.parse(res).output, "success", 3);
            }

            if (JSON.parse(res).response_type == "deleted_All") {
              _this4.remove_seleted_tables();

              currentTarget.html("Delete Selected");

              _this4.call_alert("Successfull &#128077;", JSON.parse(res).output, "success", 3);
            }
          },
          error: function error(err) {
            _this4.call_alert("Error &#128683;", "<b>Something went wrong</b>", "error", 3);
          }
        });
      }
    }, {
      key: "remove_seleted_tables",
      value: function remove_seleted_tables() {
        var allCheckBox = $("input[name='manage_tables_checkbox']:checked");
        $.each(allCheckBox, function (indexInArray, valueOfElement) {
          $(valueOfElement).parent().parent().transition("fade");
        });
        setTimeout(function () {
          $.each(allCheckBox, function (indexInArray, valueOfElement) {
            $(valueOfElement).parent().parent().remove();
          });
        }, 300);
      }
    }, {
      key: "edit_table_name",
      value: function edit_table_name(e) {
        var currentTarget = $(e.currentTarget);
        currentTarget.addClass("table_name_save");
        currentTarget.html("\n                <i class=\"save icon\"></i>\n            ");
        var link_tag = currentTarget.siblings("a");
        link_tag.css({
          cursor: "auto"
        });
        link_tag.attr("contentEditable", true);
        link_tag.focus();
        link_tag.unbind("click");
      }
    }, {
      key: "edit_tag_value",
      value: function edit_tag_value(e) {
        var currentTarget = $(e.currentTarget);
        currentTarget.removeClass("table_name_save");
        var link_tag = currentTarget.siblings("a");
        link_tag.css({
          cursor: "pointer"
        });
        link_tag.attr("contentEditable", false);
        link_tag.focusout();
        link_tag.blur();
        link_tag.bind("click");
      }
    }]);

    return UD_tables;
  }(_Base_base_class__WEBPACK_IMPORTED_MODULE_0__.default);

  new UD_tables();
});

/***/ }),

/***/ "./Assets/Src/Scripts/admin.js":
/*!*************************************!*\
  !*** ./Assets/Src/Scripts/admin.js ***!
  \*************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Styles_Backend_admin_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Styles/Backend/admin.scss */ "./Assets/Src/Styles/Backend/admin.scss");
/* harmony import */ var _Chunk_documentation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Chunk/documentation */ "./Assets/Src/Scripts/Chunk/documentation.js");
/* harmony import */ var _Chunk_create_google_sheet__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Chunk/create_google_sheet */ "./Assets/Src/Scripts/Chunk/create_google_sheet.js");
/* harmony import */ var _Chunk_fetch_sheet_data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Chunk/fetch_sheet_data */ "./Assets/Src/Scripts/Chunk/fetch_sheet_data.js");
/* harmony import */ var _Chunk_manage_tables__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Chunk/manage_tables */ "./Assets/Src/Scripts/Chunk/manage_tables.js");
/* harmony import */ var _Chunk_ud_tables__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Chunk/ud_tables */ "./Assets/Src/Scripts/Chunk/ud_tables.js");
/* harmony import */ var _Chunk_table_changes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Chunk/table_changes */ "./Assets/Src/Scripts/Chunk/table_changes.js");
/* harmony import */ var _Chunk_general_settings__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Chunk/general_settings */ "./Assets/Src/Scripts/Chunk/general_settings.js");








jQuery(document).ready(function ($) {
  if ($(".gswpts_loader").length) {
    $(".gswpts_loader").transition("fade");
  } else {
    return;
  }

  setTimeout(function () {
    $(".dashboard_content, .manage_table_content, .create_table_content, .settings_content").transition("fade");
  }, 300);
});

/***/ }),

/***/ "./Assets/Src/Styles/Backend/admin.scss":
/*!**********************************************!*\
  !*** ./Assets/Src/Styles/Backend/admin.scss ***!
  \**********************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	// startup
/******/ 	// Load entry module
/******/ 	__webpack_require__("./Assets/Src/Scripts/admin.js");
/******/ 	// This entry module used 'exports' so it can't be inlined
/******/ })()
;
//# sourceMappingURL=admin.min.js.map