{"version":3,"sources":["webpack://google-spreadsheet-to-wp-table-sync/./Assets/Src/Scripts/Chunk/Gutenberg/gutenberg-block.js","webpack://google-spreadsheet-to-wp-table-sync/webpack/bootstrap","webpack://google-spreadsheet-to-wp-table-sync/webpack/runtime/compat get default export","webpack://google-spreadsheet-to-wp-table-sync/webpack/runtime/define property getters","webpack://google-spreadsheet-to-wp-table-sync/webpack/runtime/hasOwnProperty shorthand"],"names":["registerBlockType","wp","blocks","InspectorControls","blockEditor","components","Panel","PanelBody","PanelRow","SelectControl","ToggleControl","$","document","ready","title","description","category","icon","keywords","attributes","sortcode_id","type","default","innerHTML","saved_tables","gswpts_gutenberg_block","table_details","show_settings","edit","select_options","setAttributes","call_alert","time","pos","suiAlert","position","style","header","initialOpen","label","value","onChange","val","id","parseInt","dropdown","ajax","url","admin_ajax","data","action","success","res","JSON","parse","response_type","output","DataTable","error","err","complete","responseText","setTimeout","options","forEach","table","push","table_name","class","help","checked","alert","name","multiple","dangerouslySetInnerHTML","__html","save","__webpack_module_cache__","__webpack_require__","moduleId","exports","module","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call"],"mappings":"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","file":"Scripts/Backend/Gutenberg/gutenberg.min.js","sourcesContent":["const { registerBlockType } = wp.blocks;\r\nconst { InspectorControls } = wp.blockEditor;\r\n\r\nconst {\r\n    Panel,\r\n    PanelBody,\r\n    PanelRow,\r\n    SelectControl,\r\n    ToggleControl\r\n} = wp.components;\r\n\r\n\r\n$(document).ready(function () {\r\n\r\n    registerBlockType(\r\n        'gswpts/spreadsheet-to-wp-table-sync',\r\n        {\r\n            title: ('Spreadsheet to WP Table Sync'),\r\n            description: ('Syncronization Google spreadsheet data to WP table'),\r\n            category: 'common',\r\n            icon: 'media-text',\r\n            keywords: [('spreadsheet'), ('google'), ('table')],\r\n            attributes: {\r\n\r\n                sortcode_id: {\r\n                    type: 'integer',\r\n                    default: null\r\n                },\r\n\r\n                innerHTML: {\r\n                    type: 'string',\r\n                    default: '<h4>Choose saved table from block settings</h4>'\r\n                },\r\n\r\n                saved_tables: {\r\n                    type: 'object',\r\n                    default: gswpts_gutenberg_block.table_details\r\n                },\r\n\r\n                show_settings: {\r\n                    type: 'boolean',\r\n                    default: false\r\n                }\r\n\r\n            },\r\n            edit: ({ attributes, setAttributes }) => {\r\n                const { sortcode_id, innerHTML, saved_tables, show_settings } = attributes;\r\n\r\n                function get_table_name_and_data() {\r\n                    let select_options = [\r\n                        { value: 'no_selection', label: 'Select a table' },\r\n                    ];\r\n                    if (saved_tables) {\r\n                        saved_tables.forEach(table => {\r\n                            select_options.push(\r\n                                {\r\n                                    value: parseInt(table.id),\r\n                                    label: table.table_name\r\n                                }\r\n                            )\r\n                        });\r\n                    }\r\n                    return select_options;\r\n                }\r\n\r\n\r\n                function fetch_data_by_id(id) {\r\n\r\n                    if (typeof id != 'string') {\r\n                        setAttributes({ innerHTML: '<h4>Choose saved table from block settings</h4>' });\r\n                        return;\r\n                    }\r\n\r\n                    $.ajax({\r\n                        url: gswpts_gutenberg_block.admin_ajax,\r\n                        data: {\r\n                            action: 'gswpts_sheet_fetch',\r\n                            id: parseInt(id)\r\n                        },\r\n                        type: 'POST',\r\n\r\n                        success: res => {\r\n\r\n                            if (JSON.parse(res).response_type == 'invalid_action' || JSON.parse(res).response_type == 'invalid_request') {\r\n                                setAttributes({ innerHTML: JSON.parse(res).output });\r\n\r\n                                call_alert('Error &#128683;', JSON.parse(res).output, 'error', 4)\r\n                            }\r\n\r\n                            if (JSON.parse(res).response_type == 'success') {\r\n\r\n                                setAttributes({ innerHTML: JSON.parse(res).output });\r\n\r\n                                $('#' + id + ' > table').DataTable();\r\n\r\n                            }\r\n\r\n\r\n                        },\r\n\r\n                        error: err => {\r\n                            call_alert('Error &#128683;', '<b>Something went wrong</b>', 'error', 3)\r\n                        },\r\n\r\n                        complete: (res) => {\r\n\r\n                            if (JSON.parse(res.responseText).response_type == 'success') {\r\n\r\n                                setTimeout(() => {\r\n\r\n                                    call_alert('Successfull &#128077;', '<b>Google Sheet data fetched successfully</b>', 'success', 3)\r\n\r\n                                }, 700);\r\n                            }\r\n\r\n                        },\r\n                    })\r\n                }\r\n\r\n                function call_alert(title, description, type, time, pos = 'bottom-right') {\r\n                    $.suiAlert({\r\n                        title: title,\r\n                        description: description,\r\n                        type: type,\r\n                        time: time,\r\n                        position: pos,\r\n                    });\r\n                }\r\n\r\n                function add_select_box_style() {\r\n                    $('#table_exporting').dropdown();\r\n                }\r\n\r\n\r\n                let loader = `\r\n                                    <div class=\"ui segment gswpts_table_loader\">\r\n                                                <div class=\"ui active inverted dimmer\">\r\n                                                    <div class=\"ui large text loader\">Loading</div>\r\n                                                </div>\r\n                                                <p></p>\r\n                                                <p></p>\r\n                                                <p></p>\r\n                                        </div>\r\n                                    `;\r\n\r\n\r\n                return (\r\n                    [\r\n                        <InspectorControls style=\"margin-top: 40px\">\r\n\r\n                            <Panel header=\"Spreadsheet to WP Table Sync\"\r\n                            >\r\n                                <PanelBody\r\n                                    title=\"Choose Table\"\r\n                                    icon=\"media-text\"\r\n                                    initialOpen={true}\r\n                                >\r\n                                    <SelectControl\r\n                                        label=\"Select Table\"\r\n                                        value='no_selection'\r\n                                        onChange={(val) => {\r\n                                            setAttributes({ sortcode_id: typeof val == 'string' ? parseInt(val) : null })\r\n                                            setAttributes({ innerHTML: loader })\r\n                                            setAttributes({ show_settings: !show_settings })\r\n                                            add_select_box_style()\r\n                                            fetch_data_by_id(val)\r\n                                        }\r\n                                        }\r\n                                        options={\r\n                                            get_table_name_and_data()\r\n                                        }\r\n                                    />\r\n\r\n                                </PanelBody>\r\n\r\n\r\n                                <PanelBody\r\n                                    title=\"Display Settings\"\r\n                                    icon=\"admin-settings\"\r\n                                    initialOpen={false}\r\n                                >\r\n                                    <PanelRow class=\"gswpts_panal\">\r\n                                        <ToggleControl\r\n                                            label=\"Show Title\"\r\n                                            help='Enable this to show the table title in h3 tag above the table'\r\n                                            checked={true}\r\n                                            onChange={() => { alert('hello') }}\r\n                                        />\r\n                                        <br />\r\n                                    </PanelRow>\r\n\r\n                                    <PanelRow class=\"gswpts_panal\">\r\n                                        <SelectControl\r\n                                            label=\"Default rows per page\"\r\n                                            value='10'\r\n                                            onChange={(val) => { }}\r\n                                            options={\r\n                                                [\r\n                                                    { value: 1, label: '1' },\r\n                                                    { value: 5, label: '5' },\r\n                                                    { value: 10, label: '10' },\r\n                                                    { value: 15, label: '15' },\r\n                                                    { value: 25, label: '25' },\r\n                                                    { value: 50, label: '50' },\r\n                                                    { value: 100, label: '100' },\r\n                                                    { value: 'all', label: 'All' },\r\n                                                ]\r\n                                            }\r\n                                        />\r\n                                        <br />\r\n                                    </PanelRow>\r\n\r\n\r\n                                    <PanelRow class=\"gswpts_panal\">\r\n                                        <ToggleControl\r\n                                            label=\"Show info block\"\r\n                                            help='Show Showing X to Y of Z entries block below the table'\r\n                                            checked={true}\r\n                                            onChange={() => { alert('hello') }}\r\n                                        />\r\n                                        <br />\r\n                                    </PanelRow>\r\n\r\n\r\n                                    <PanelRow class=\"gswpts_panal\">\r\n                                        <ToggleControl\r\n                                            label=\"Resposive table\"\r\n                                            help='Allow collapsing on mobile and tablet screen'\r\n                                            checked={true}\r\n                                            onChange={() => { alert('hello') }}\r\n                                        />\r\n                                        <br />\r\n                                    </PanelRow>\r\n\r\n                                    <PanelRow class=\"gswpts_panal\">\r\n                                        <ToggleControl\r\n                                            label=\"Show X entries\"\r\n                                            help='Show X entries per page dropdown'\r\n                                            checked={true}\r\n                                            onChange={() => { alert('hello') }}\r\n                                        />\r\n                                        <br />\r\n                                    </PanelRow>\r\n\r\n                                    <PanelRow class=\"gswpts_panal\">\r\n                                        <ToggleControl\r\n                                            label=\"Swap Filters\"\r\n                                            help='Swap the places of X entries dropdown and search filter input'\r\n                                            checked={true}\r\n                                            onChange={() => { alert('hello') }}\r\n                                        />\r\n                                        <br />\r\n                                    </PanelRow>\r\n\r\n                                    <PanelRow class=\"gswpts_panal\">\r\n                                        <ToggleControl\r\n                                            label=\"Swap Bottom Elements\"\r\n                                            help='Swap the places of Showing X to Y of Z entries with table pagination filter'\r\n                                            checked={true}\r\n                                            onChange={() => { alert('hello') }}\r\n                                        />\r\n                                        <br />\r\n                                    </PanelRow>\r\n\r\n\r\n                                </PanelBody>\r\n\r\n                                <PanelBody\r\n                                    title=\"Sort and Filter\"\r\n                                    icon=\"filter\"\r\n                                    initialOpen={false}\r\n                                >\r\n                                    <PanelRow class=\"gswpts_panal\">\r\n                                        <ToggleControl\r\n                                            label=\"Allow Sorting\"\r\n                                            help='Enable this feature to sort table data for frontend.'\r\n                                            checked={true}\r\n                                            onChange={() => { alert('hello') }}\r\n                                        />\r\n                                        <br />\r\n                                    </PanelRow>\r\n\r\n                                    <PanelRow class=\"gswpts_panal\">\r\n                                        <ToggleControl\r\n                                            label=\"Search Bar\"\r\n                                            help='Enable this feature to show a search bar in for the table. It will help user to search data in the table'\r\n                                            checked={true}\r\n                                            onChange={() => { alert('hello') }}\r\n                                        />\r\n                                        <br />\r\n                                    </PanelRow>\r\n\r\n                                </PanelBody>\r\n\r\n                                <PanelBody\r\n                                    title=\"Table Tools\"\r\n                                    icon=\"admin-tools\"\r\n                                    initialOpen={false}\r\n                                >\r\n                                    <PanelRow class=\"gswpts_panal\">\r\n                                        <select name=\"skills\" multiple=\"\" class=\"ui fluid dropdown\" id=\"table_exporting\">\r\n                                            <option value=\"\">Select Type</option>\r\n                                            <option value=\"json\">JSON</option>\r\n                                            <option value=\"pdf\">PDF</option>\r\n                                            <option value=\"csv\">CSV</option>\r\n                                            <option value=\"excel\">Excel</option>\r\n                                            <option value=\"print\">Print</option>\r\n                                            <option value=\"copy\">Copy</option>\r\n                                        </select>\r\n                                        <br />\r\n                                    </PanelRow>\r\n                                </PanelBody>\r\n\r\n                            </Panel>\r\n\r\n                        </InspectorControls>,\r\n                        <div\r\n                            class=\"gswpts_table_container\" id={sortcode_id}\r\n                            dangerouslySetInnerHTML={{ __html: innerHTML }}>\r\n                        </div>\r\n                    ]\r\n                )\r\n            },\r\n            save: ({ attributes }) => {\r\n                const { sortcode_id } = attributes\r\n\r\n                return (\r\n                    <>\r\n                        {\r\n                            sortcode_id == null ? (\r\n                                <div></div>\r\n                            ) : (\r\n                                    <>\r\n                                        [gswpts_table id ={sortcode_id}]\r\n                                    </>\r\n                                )\r\n                        }\r\n                    </>\r\n                )\r\n            }\r\n        }\r\n    );\r\n\r\n\r\n})\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }"],"sourceRoot":""}