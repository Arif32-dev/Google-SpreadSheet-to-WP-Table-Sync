{"version":3,"sources":["webpack://google-spreadsheet-to-wp-table-sync/./Assets/Src/Scripts/Chunk/Frontend/common_func.js","webpack://google-spreadsheet-to-wp-table-sync/./Assets/Src/Scripts/Chunk/Frontend/data_tables_async.js","webpack://google-spreadsheet-to-wp-table-sync/./Assets/Src/Scripts/Chunk/Frontend/data_table_default.js"],"names":["Global_Table_Config","$","i","elem","table_name","table_settings","dom","show_x_entries","search_bar","show_info_block","find","DataTable","this","table_obj","swap_input_filter","swap_bottom_options","parseInt","default_rows_per_page","allow_sorting","export_btns","table_export","forEach","btn","removeClass","swap_filter_inputs","css","pagination_menu","style","flex_direction","table_info_style","margin_left","margin_right","table_paginate_style","children","length","overflow_menu_style","bottom_option_style","$arg","jQuery","document","ready","frontend_table","front_end_data","asynchronous_loading","events","get_frontend_table","each","id","attr","ajax","url","admin_ajax","data","action","type","success","res","console","log","JSON","parse","response_type","table_data","table_title","html","output","table_configuration","alert","error","err"],"mappings":"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","file":"Scripts/Frontend/frontend.min.js","sourcesContent":["export default class Global_Table_Config {\r\n    table_configuration($, i, elem, table_name, table_settings) {\r\n\r\n        // let dom = `B<\"filtering_input filtering_input_${i}\"${table_settings.show_x_entries == 'true' ? 'l' : ''}${table_settings.search_bar == 'true' ? 'f' : ''}>rt<\"bottom_options bottom_options_${i}\"${table_settings.show_info_block == 'true' ? 'i' : ''}p>`;\r\n        let dom = `<\"filtering_input filtering_input_${i}\"${table_settings.show_x_entries == 'true' ? 'l' : ''}${table_settings.search_bar == 'true' ? 'f' : ''}>rt<\"bottom_options bottom_options_${i}\"${table_settings.show_info_block == 'true' ? 'i' : ''}p>`;\r\n        $(elem).find('#create_tables').DataTable(\r\n            this.table_obj($, table_name, table_settings, dom)\r\n        );\r\n\r\n        // this.reveal_export_btns(elem, table_settings);\r\n\r\n        this.swap_input_filter($, i, table_settings);\r\n\r\n        this.swap_bottom_options($, i, table_settings);\r\n\r\n    }\r\n\r\n    table_obj($, table_name, table_settings, dom) {\r\n\r\n        let table_object = {\r\n            dom: dom,\r\n            // buttons: [{\r\n            //     text: 'JSON { }',\r\n            //     className: 'ui inverted yellow button export_btns json_btn',\r\n            //     action: function (e, dt, button, config) {\r\n            //         var data = dt.buttons.exportData();\r\n\r\n            //         $.fn.dataTable.fileSave(\r\n            //             new Blob([JSON.stringify(data)]),\r\n            //             `${table_name}.json`\r\n            //         );\r\n            //     }\r\n            // },\r\n            // {\r\n            //     text: 'PDF &nbsp;<i class=\"fas fa-file-pdf\"></i>',\r\n            //     extend: 'pdf',\r\n            //     className: 'ui inverted red button export_btns pdf_btn',\r\n            //     title: `${table_name}`\r\n            // },\r\n            // {\r\n            //     text: 'CSV &nbsp; <i class=\"fas fa-file-csv\"></i>',\r\n            //     extend: 'csv',\r\n            //     className: 'ui inverted green button export_btns csv_btn',\r\n            //     title: `${table_name}`\r\n            // },\r\n            // {\r\n            //     text: 'Excel &nbsp; <i class=\"fas fa-file-excel\"></i>',\r\n            //     extend: 'excel',\r\n            //     className: 'ui inverted green button export_btns excel_btn',\r\n            //     title: `${table_name}`\r\n            // },\r\n            // {\r\n            //     text: 'Print &nbsp; <i class=\"fas fa-print\"></i>',\r\n            //     extend: 'print',\r\n            //     className: 'ui inverted secondary button export_btns print_btn',\r\n            //     title: `${table_name}`\r\n            // },\r\n            // {\r\n            //     text: 'Copy &nbsp; <i class=\"fas fa-copy\"></i>',\r\n            //     extend: 'copy',\r\n            //     className: 'ui inverted violet button export_btns copy_btn',\r\n            //     title: `${table_name}`\r\n            // }\r\n\r\n            // ],\r\n\r\n            \"order\": [],\r\n            \"responsive\": true,\r\n            \"lengthMenu\": [\r\n                [1, 5, 10, 15],\r\n                [1, 5, 10, 15]\r\n            ],\r\n            \"pageLength\": parseInt(table_settings.default_rows_per_page),\r\n            \"lengthChange\": true,\r\n            \"ordering\": table_settings.allow_sorting == 'true' ? true : false,\r\n            \"destroy\": true,\r\n            \"scrollX\": true\r\n        }\r\n\r\n        return table_object;\r\n    }\r\n\r\n    reveal_export_btns($, elem, table_settings) {\r\n        let export_btns = table_settings.table_export;\r\n        if (export_btns != 'empty') {\r\n            export_btns.forEach(btn => {\r\n                $(elem).find('.' + btn + '_btn').removeClass('export_btns');\r\n            });\r\n        }\r\n    }\r\n\r\n    swap_input_filter($, i, table_settings) {\r\n        /* If checkbox is checked then swap filter */\r\n        if (table_settings.swap_filter_inputs == 'true') {\r\n            $('.filtering_input_' + i + '').css('flex-direction', 'row-reverse');\r\n            $('.filtering_input_' + i + ' > #create_tables_length').css({\r\n                'margin-right': '0',\r\n                'margin-left': 'auto'\r\n            });\r\n            $('.filtering_input_' + i + ' > #create_tables_filter').css({\r\n                'margin-left': '0',\r\n                'margin-right': 'auto',\r\n            });\r\n        } else {\r\n            /* Set back to default position */\r\n            $('.filtering_input_' + i + '').css('flex-direction', 'row');\r\n            $('.filtering_input_' + i + ' > #create_tables_length').css({\r\n                'margin-right': 'auto',\r\n                'margin-left': '0'\r\n            });\r\n            $('.filtering_input_' + i + ' > #create_tables_filter').css({\r\n                'margin-left': 'auto',\r\n                'margin-right': '0',\r\n            });\r\n        }\r\n    }\r\n\r\n    swap_bottom_options($, i, table_settings) {\r\n\r\n        let pagination_menu = $('.bottom_options_' + i + ' .pagination.menu')\r\n\r\n\r\n        let style = {\r\n            flex_direction: 'row-reverse',\r\n            table_info_style: {\r\n                margin_left: 'auto',\r\n                margin_right: 0\r\n            },\r\n            table_paginate_style: {\r\n                margin_left: 0,\r\n                margin_right: 'auto'\r\n            }\r\n        }\r\n\r\n        if (table_settings.swap_bottom_options == 'true') {\r\n\r\n            if (pagination_menu.children().length > 5) {\r\n                this.overflow_menu_style($)\r\n            } else {\r\n                this.bottom_option_style($, style, i)\r\n            }\r\n\r\n        } else {\r\n\r\n            if (pagination_menu.children().length > 5) {\r\n                this.overflow_menu_style($, i)\r\n            } else {\r\n\r\n                style['flex_direction'] = 'row'\r\n\r\n                style.table_info_style['margin_left'] = 0\r\n                style.table_info_style['margin_right'] = 'auto'\r\n\r\n                style.table_paginate_style['margin_left'] = 'auto'\r\n                style.table_paginate_style['margin_right'] = 0\r\n\r\n                this.bottom_option_style($, style, i)\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    overflow_menu_style($, i) {\r\n        $('.bottom_options_' + i + '').css('flex-direction', 'column');\r\n        $('.bottom_options_' + i + ' > #create_tables_info').css({\r\n            'margin': '5px auto',\r\n        });\r\n        $('.bottom_options_' + i + ' > #create_tables_paginate').css({\r\n            'margin': '5px auto',\r\n        });\r\n    }\r\n\r\n    bottom_option_style($, $arg, i) {\r\n\r\n        $('.bottom_options_' + i + '').css('flex-direction', $arg['flex_direction']);\r\n        $('.bottom_options_' + i + ' > #create_tables_info').css({\r\n            'margin-left': $arg['table_info_style']['margin_left'],\r\n            'margin-right': $arg['table_info_style']['margin_right']\r\n        });\r\n        $('.bottom_options_' + i + ' > #create_tables_paginate').css({\r\n            'margin-left': $arg['table_paginate_style']['margin_left'],\r\n            'margin-right': $arg['table_paginate_style']['margin_right'],\r\n        });\r\n\r\n    }\r\n\r\n    html_loader() {\r\n        let loader = `\r\n               <div class=\"ui segment gswpts_table_loader\">\r\n                        <div class=\"ui active inverted dimmer\">\r\n                            <div class=\"ui large text loader\">Loading</div>\r\n                        </div>\r\n                        <p></p>\r\n                        <p></p>\r\n                        <p></p>\r\n                </div>\r\n            `\r\n        return loader;\r\n    }\r\n}","import Global_Table_Config from './common_func';\r\n\r\n\r\njQuery(document).ready(function($) {\r\n    class Data_Tables_Async {\r\n        constructor() {\r\n            this.frontend_table = $('.gswpts_tables_container');\r\n            if (front_end_data.asynchronous_loading == 'on') {\r\n                this.events();\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n        events() {\r\n            this.get_frontend_table();\r\n        }\r\n\r\n        get_frontend_table() {\r\n            $.each(this.frontend_table, function(i, elem) {\r\n                let id = $(elem).attr('id');\r\n                $.ajax({\r\n                    url: front_end_data.admin_ajax,\r\n\r\n                    data: {\r\n                        action: 'gswpts_sheet_fetch',\r\n                        id: id\r\n                    },\r\n\r\n                    type: 'post',\r\n\r\n                    success: res => {\r\n                        console.log(JSON.parse(res))\r\n                        if (JSON.parse(res).response_type == 'success') {\r\n\r\n                            let table_settings = JSON.parse(JSON.parse(res).table_data.table_settings);\r\n\r\n                            // if (table_settings.responsive_table == 'true') {\r\n                            //     $(elem).addClass('gswpts_resposive');\r\n                            // }\r\n\r\n                            if (table_settings.table_title == 'true') {\r\n                                $(elem).find('h3').html(JSON.parse(res).table_data.table_name);\r\n                            }\r\n\r\n                            $(elem).find('.gswpts_tables_content').html(JSON.parse(res).output);\r\n\r\n                            let table_name = JSON.parse(res).table_data.table_name\r\n\r\n                            let table_obj = new Global_Table_Config();\r\n\r\n                            table_obj.table_configuration($, i, elem, table_name, table_settings)\r\n\r\n                        } else {\r\n                            alert('Table could not be loaded. Try again');\r\n                            $(elem).find('.gswpts_tables_content').html(\"<strong>Table could not be loaded. Try again</strong>\");\r\n                        }\r\n                    },\r\n\r\n                    error: err => {\r\n                        alert('Something went wrong')\r\n                        $(elem).find('.gswpts_tables_content').html(\"<strong>Table could not be loaded. Try again</strong>\");\r\n                    },\r\n\r\n                })\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n    new Data_Tables_Async;\r\n})","import Global_Table_Config from './common_func';\r\n\r\njQuery(document).ready(function ($) {\r\n    class Data_Tables_Default {\r\n        constructor() {\r\n\r\n            this.frontend_table = $('.gswpts_tables_container');\r\n            if (front_end_data.asynchronous_loading == 'off') {\r\n                this.events();\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n        events() {\r\n            this.get_frontend_table();\r\n        }\r\n\r\n        get_frontend_table() {\r\n            $.each(this.frontend_table, function (i, elem) {\r\n\r\n                let table_settings = JSON.parse($(elem).attr('data-table_settings'));\r\n\r\n                let table_name = $(elem).attr('data-table_name')\r\n\r\n                let table_obj = new Global_Table_Config();\r\n\r\n                table_obj.table_configuration($, i, elem, table_name, table_settings)\r\n\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n    new Data_Tables_Default;\r\n})"],"sourceRoot":""}