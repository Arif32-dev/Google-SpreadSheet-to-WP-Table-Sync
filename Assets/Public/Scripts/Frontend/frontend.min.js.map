{"version":3,"sources":["webpack://google-spreadsheet-to-wp-table-sync/./Assets/Src/Scripts/Chunk/Frontend/common_func.js","webpack://google-spreadsheet-to-wp-table-sync/./Assets/Src/Scripts/Chunk/Frontend/data_tables_async.js","webpack://google-spreadsheet-to-wp-table-sync/./Assets/Src/Scripts/Chunk/Frontend/data_table_default.js"],"names":["Global_Table_Config","$","i","elem","table_name","table_settings","dom","show_x_entries","search_bar","show_info_block","this","isProPluginActive","changeCellFormat","cell_format","find","changeRedirectionType","redirection_type","DataTable","table_obj","reveal_export_btns","swap_input_filter","swap_bottom_options","type","links","length","each","link","attr","formatStyle","tableCell","cell","removeClass","addClass","front_end_data","isProActive","table_object","order","responsive","lengthMenu","pageLength","parseInt","default_rows_per_page","lengthChange","ordering","allow_sorting","destroy","scrollX","buttons","text","iconsURL","curlyBrackets","className","action","e","dt","button","config","data","exportData","fn","dataTable","fileSave","Blob","JSON","stringify","filePdf","extend","title","fileCSV","fileExcel","printIcon","copySolid","scrollY","vertical_scroll","export_btns","table_export","forEach","btn","swap_filter_inputs","css","style","flex_direction","table_info_style","margin_left","margin_right","table_paginate_style","bottom_option_style","margin","$arg","document","ready","frontend_table","asynchronous_loading","events","get_frontend_table","id","ajax","url","admin_ajax","success","res","console","log","parse","tableClass","response_type","table_data","responsive_table","table_style","table_title","html","output","table_configuration","error","err","alert","jQuery"],"mappings":"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","file":"Scripts/Frontend/frontend.min.js","sourcesContent":["export default class Global_Table_Config {\r\n    table_configuration($, i, elem, table_name, table_settings) {\r\n        let dom = `<\"filtering_input filtering_input_${i}\"${\r\n            table_settings.show_x_entries == \"true\" ? \"l\" : \"\"\r\n        }${table_settings.search_bar == \"true\" ? \"f\" : \"\"}>rt<\"bottom_options bottom_options_${i}\"${\r\n            table_settings.show_info_block == \"true\" ? \"i\" : \"\"\r\n        }p>`;\r\n\r\n        if (this.isProPluginActive()) {\r\n            dom = `B<\"filtering_input filtering_input_${i}\"${\r\n                table_settings.show_x_entries == \"true\" ? \"l\" : \"\"\r\n            }${\r\n                table_settings.search_bar == \"true\" ? \"f\" : \"\"\r\n            }>rt<\"bottom_options bottom_options_${i}\"${\r\n                table_settings.show_info_block == \"true\" ? \"i\" : \"\"\r\n            }p>`;\r\n\r\n            // change the cell format according to feature saved at database\r\n            this.changeCellFormat(\r\n                table_settings.cell_format,\r\n                $(elem).find(\"#create_tables th, td\"),\r\n                $\r\n            );\r\n\r\n            this.changeRedirectionType(\r\n                table_settings.redirection_type,\r\n                $(elem).find(\"#create_tables a\"),\r\n                $\r\n            );\r\n        }\r\n\r\n        $(elem)\r\n            .find(\"#create_tables\")\r\n            .DataTable(this.table_obj($, table_name, table_settings, dom));\r\n\r\n        if (this.isProPluginActive()) {\r\n            this.reveal_export_btns($, elem, table_settings);\r\n        }\r\n\r\n        this.swap_input_filter($, i, table_settings);\r\n\r\n        this.swap_bottom_options($, i, table_settings);\r\n    }\r\n\r\n    changeRedirectionType(type, links, $) {\r\n        if (!links.length) return;\r\n        $.each(links, function (i, link) {\r\n            $(link).attr(\"target\", type);\r\n        });\r\n    }\r\n\r\n    changeCellFormat(formatStyle, tableCell, $) {\r\n        switch (formatStyle) {\r\n            case \"wrap\":\r\n                $.each(tableCell, function (i, cell) {\r\n                    $(cell).removeClass(\"clip_style\");\r\n                    $(cell).removeClass(\"expanded_style\");\r\n                    $(cell).addClass(\"wrap_style\");\r\n                });\r\n                break;\r\n\r\n            case \"clip\":\r\n                $.each(tableCell, function (i, cell) {\r\n                    $(cell).removeClass(\"wrap_style\");\r\n                    $(cell).removeClass(\"expanded_style\");\r\n                    $(cell).addClass(\"clip_style\");\r\n                });\r\n                break;\r\n            case \"expand\":\r\n                $.each(tableCell, function (i, cell) {\r\n                    $(cell).removeClass(\"clip_style\");\r\n                    $(cell).removeClass(\"wrap_style\");\r\n                    $(cell).addClass(\"expanded_style\");\r\n                });\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    isProPluginActive() {\r\n        if (front_end_data.isProActive) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    table_obj($, table_name, table_settings, dom) {\r\n        let table_object = {\r\n            dom: dom,\r\n            order: [],\r\n            responsive: true,\r\n            lengthMenu: [\r\n                [1, 5, 10, 15],\r\n                [1, 5, 10, 15],\r\n            ],\r\n            pageLength: parseInt(table_settings.default_rows_per_page),\r\n            lengthChange: true,\r\n            ordering: table_settings.allow_sorting == \"true\" ? true : false,\r\n            destroy: true,\r\n            scrollX: true,\r\n        };\r\n\r\n        if (this.isProPluginActive()) {\r\n            table_object.buttons = [\r\n                {\r\n                    text: `JSON &nbsp;<img src=\"${front_end_data.iconsURL.curlyBrackets}\" />`,\r\n                    className: \"ui inverted yellow button export_btns json_btn\",\r\n                    action: function (e, dt, button, config) {\r\n                        var data = dt.buttons.exportData();\r\n                        $.fn.dataTable.fileSave(\r\n                            new Blob([JSON.stringify(data)]),\r\n                            `${table_name}.json`\r\n                        );\r\n                    },\r\n                },\r\n                {\r\n                    text: `PDF &nbsp;<img src=\"${front_end_data.iconsURL.filePdf}\" />`,\r\n                    extend: \"pdf\",\r\n                    className: \"ui inverted red button export_btns pdf_btn\",\r\n                    title: `${table_name}`,\r\n                },\r\n                {\r\n                    text: `CSV &nbsp;<img src=\"${front_end_data.iconsURL.fileCSV}\" />`,\r\n                    extend: \"csv\",\r\n                    className: \"ui inverted green button export_btns csv_btn\",\r\n                    title: `${table_name}`,\r\n                },\r\n                {\r\n                    text: `Excel &nbsp;<img src=\"${front_end_data.iconsURL.fileExcel}\" />`,\r\n                    extend: \"excel\",\r\n                    className: \"ui inverted green button export_btns excel_btn\",\r\n                    title: `${table_name}`,\r\n                },\r\n                {\r\n                    text: `Print &nbsp;<img src=\"${front_end_data.iconsURL.printIcon}\" />`,\r\n                    extend: \"print\",\r\n                    className: \"ui inverted secondary button export_btns print_btn\",\r\n                    title: `${table_name}`,\r\n                },\r\n                {\r\n                    text: `Copy &nbsp;<img src=\"${front_end_data.iconsURL.copySolid}\" />`,\r\n                    extend: \"copy\",\r\n                    className: \"ui inverted violet button export_btns copy_btn\",\r\n                    title: `${table_name}`,\r\n                },\r\n            ];\r\n\r\n            table_object.lengthMenu = [\r\n                [1, 5, 10, 15, 25, 50, 100, -1],\r\n                [1, 5, 10, 15, 25, 50, 100, \"All\"],\r\n            ];\r\n\r\n            if (table_object.scrollY != \"default\") {\r\n                table_object.scrollY = `${table_settings.vertical_scroll}px`;\r\n            }\r\n        }\r\n\r\n        return table_object;\r\n    }\r\n\r\n    reveal_export_btns($, elem, table_settings) {\r\n        if (!table_settings) return;\r\n\r\n        let export_btns = table_settings.table_export;\r\n\r\n        if (export_btns != \"empty\" && export_btns) {\r\n            export_btns.forEach((btn) => {\r\n                $(elem)\r\n                    .find(\".\" + btn + \"_btn\")\r\n                    .removeClass(\"export_btns\");\r\n            });\r\n        }\r\n    }\r\n\r\n    swap_input_filter($, i, table_settings) {\r\n        /* If checkbox is checked then swap filter */\r\n        if (table_settings.swap_filter_inputs == \"true\") {\r\n            $(\".filtering_input_\" + i + \"\").css(\"flex-direction\", \"row-reverse\");\r\n            $(\".filtering_input_\" + i + \" > #create_tables_length\").css({\r\n                \"margin-right\": \"0\",\r\n                \"margin-left\": \"auto\",\r\n            });\r\n            $(\".filtering_input_\" + i + \" > #create_tables_filter\").css({\r\n                \"margin-left\": \"0\",\r\n                \"margin-right\": \"auto\",\r\n            });\r\n        } else {\r\n            /* Set back to default position */\r\n            $(\".filtering_input_\" + i + \"\").css(\"flex-direction\", \"row\");\r\n            $(\".filtering_input_\" + i + \" > #create_tables_length\").css({\r\n                \"margin-right\": \"auto\",\r\n                \"margin-left\": \"0\",\r\n            });\r\n            $(\".filtering_input_\" + i + \" > #create_tables_filter\").css({\r\n                \"margin-left\": \"auto\",\r\n                \"margin-right\": \"0\",\r\n            });\r\n        }\r\n    }\r\n\r\n    swap_bottom_options($, i, table_settings) {\r\n        let pagination_menu = $(\".bottom_options_\" + i + \" .pagination.menu\");\r\n\r\n        let style = {\r\n            flex_direction: \"row-reverse\",\r\n            table_info_style: {\r\n                margin_left: \"auto\",\r\n                margin_right: 0,\r\n            },\r\n            table_paginate_style: {\r\n                margin_left: 0,\r\n                margin_right: \"auto\",\r\n            },\r\n        };\r\n\r\n        if (table_settings.swap_bottom_options == \"true\") {\r\n            this.bottom_option_style($, style, i);\r\n        } else {\r\n            style[\"flex_direction\"] = \"row\";\r\n\r\n            style.table_info_style[\"margin_left\"] = 0;\r\n            style.table_info_style[\"margin_right\"] = \"auto\";\r\n\r\n            style.table_paginate_style[\"margin_left\"] = \"auto\";\r\n            style.table_paginate_style[\"margin_right\"] = 0;\r\n\r\n            this.bottom_option_style($, style, i);\r\n        }\r\n    }\r\n\r\n    overflow_menu_style($, i) {\r\n        $(\".bottom_options_\" + i + \"\").css(\"flex-direction\", \"column\");\r\n        $(\".bottom_options_\" + i + \" > #create_tables_info\").css({\r\n            margin: \"5px auto\",\r\n        });\r\n        $(\".bottom_options_\" + i + \" > #create_tables_paginate\").css({\r\n            margin: \"5px auto\",\r\n        });\r\n    }\r\n\r\n    bottom_option_style($, $arg, i) {\r\n        $(\".bottom_options_\" + i + \"\").css(\"flex-direction\", $arg[\"flex_direction\"]);\r\n        $(\".bottom_options_\" + i + \" > #create_tables_info\").css({\r\n            \"margin-left\": $arg[\"table_info_style\"][\"margin_left\"],\r\n            \"margin-right\": $arg[\"table_info_style\"][\"margin_right\"],\r\n        });\r\n        $(\".bottom_options_\" + i + \" > #create_tables_paginate\").css({\r\n            \"margin-left\": $arg[\"table_paginate_style\"][\"margin_left\"],\r\n            \"margin-right\": $arg[\"table_paginate_style\"][\"margin_right\"],\r\n        });\r\n    }\r\n\r\n    html_loader() {\r\n        let loader = `\r\n               <div class=\"ui segment gswpts_table_loader\">\r\n                        <div class=\"ui active inverted dimmer\">\r\n                            <div class=\"ui large text loader\">Loading</div>\r\n                        </div>\r\n                        <p></p>\r\n                        <p></p>\r\n                        <p></p>\r\n                </div>\r\n            `;\r\n        return loader;\r\n    }\r\n}\r\n","import Global_Table_Config from \"./common_func\";\r\n\r\nif (front_end_data.isProActive) {\r\n    $(document).ready(function () {\r\n        class Data_Tables_Async {\r\n            constructor() {\r\n                this.frontend_table = $(\".gswpts_tables_container\");\r\n                if (front_end_data.asynchronous_loading == \"on\") {\r\n                    this.events();\r\n                } else {\r\n                    return;\r\n                }\r\n            }\r\n            events() {\r\n                this.get_frontend_table();\r\n            }\r\n\r\n            get_frontend_table() {\r\n                $.each(this.frontend_table, function (i, elem) {\r\n                    let id = $(elem).attr(\"id\");\r\n                    $.ajax({\r\n                        url: front_end_data.admin_ajax,\r\n\r\n                        data: {\r\n                            action: \"gswpts_sheet_fetch\",\r\n                            id: id,\r\n                        },\r\n\r\n                        type: \"post\",\r\n\r\n                        success: (res) => {\r\n                            console.log(JSON.parse(res));\r\n                            let tableClass = new Global_Table_Config();\r\n\r\n                            if (JSON.parse(res).response_type == \"success\") {\r\n                                let table_settings = JSON.parse(\r\n                                    JSON.parse(res).table_data.table_settings\r\n                                );\r\n\r\n                                if (tableClass.isProPluginActive()) {\r\n                                    if (table_settings.responsive_table == \"true\") {\r\n                                        $(elem).addClass(\"gswpts_responsive\");\r\n                                    }\r\n                                    $(elem).addClass(\r\n                                        `gswpts_${\r\n                                            table_settings.table_style\r\n                                                ? table_settings.table_style\r\n                                                : null\r\n                                        }`\r\n                                    );\r\n                                }\r\n\r\n                                if (table_settings.table_title == \"true\") {\r\n                                    $(elem).find(\"h3\").html(JSON.parse(res).table_data.table_name);\r\n                                }\r\n\r\n                                $(elem).find(\".gswpts_tables_content\").html(JSON.parse(res).output);\r\n\r\n                                let table_name = JSON.parse(res).table_data.table_name;\r\n\r\n                                tableClass.table_configuration(\r\n                                    $,\r\n                                    i,\r\n                                    elem,\r\n                                    table_name,\r\n                                    table_settings\r\n                                );\r\n                            } else {\r\n                                $(elem)\r\n                                    .find(\".gswpts_tables_content\")\r\n                                    .html(\"<strong>Table could not be loaded. Try again</strong>\");\r\n                            }\r\n                        },\r\n\r\n                        error: (err) => {\r\n                            alert(\"Something went wrong\");\r\n                            console.log(err);\r\n                            $(elem)\r\n                                .find(\".gswpts_tables_content\")\r\n                                .html(\"<strong>Table could not be loaded. Try again</strong>\");\r\n                        },\r\n                    });\r\n                });\r\n            }\r\n        }\r\n\r\n        new Data_Tables_Async();\r\n    });\r\n} else {\r\n    jQuery(document).ready(function ($) {\r\n        class Data_Tables_Async {\r\n            constructor() {\r\n                this.frontend_table = $(\".gswpts_tables_container\");\r\n                if (front_end_data.asynchronous_loading == \"on\") {\r\n                    this.events();\r\n                } else {\r\n                    return;\r\n                }\r\n            }\r\n            events() {\r\n                this.get_frontend_table();\r\n            }\r\n\r\n            get_frontend_table() {\r\n                $.each(this.frontend_table, function (i, elem) {\r\n                    let id = $(elem).attr(\"id\");\r\n                    $.ajax({\r\n                        url: front_end_data.admin_ajax,\r\n\r\n                        data: {\r\n                            action: \"gswpts_sheet_fetch\",\r\n                            id: id,\r\n                        },\r\n\r\n                        type: \"post\",\r\n\r\n                        success: (res) => {\r\n                            console.log(JSON.parse(res));\r\n                            if (JSON.parse(res).response_type == \"success\") {\r\n                                let table_settings = JSON.parse(\r\n                                    JSON.parse(res).table_data.table_settings\r\n                                );\r\n\r\n                                if (table_settings.responsive_table == \"true\") {\r\n                                    $(elem).addClass(\"gswpts_responsive\");\r\n                                }\r\n\r\n                                if (table_settings.table_title == \"true\") {\r\n                                    $(elem).find(\"h3\").html(JSON.parse(res).table_data.table_name);\r\n                                }\r\n\r\n                                $(elem).find(\".gswpts_tables_content\").html(JSON.parse(res).output);\r\n\r\n                                let table_name = JSON.parse(res).table_data.table_name;\r\n\r\n                                let tableClass = new Global_Table_Config();\r\n\r\n                                tableClass.table_configuration(\r\n                                    $,\r\n                                    i,\r\n                                    elem,\r\n                                    table_name,\r\n                                    table_settings\r\n                                );\r\n                            } else {\r\n                                $(elem)\r\n                                    .find(\".gswpts_tables_content\")\r\n                                    .html(\"<strong>Table could not be loaded. Try again</strong>\");\r\n                            }\r\n                        },\r\n\r\n                        error: (err) => {\r\n                            alert(\"Something went wrong\");\r\n                            console.log(err);\r\n                            $(elem)\r\n                                .find(\".gswpts_tables_content\")\r\n                                .html(\"<strong>Table could not be loaded. Try again</strong>\");\r\n                        },\r\n                    });\r\n                });\r\n            }\r\n        }\r\n\r\n        new Data_Tables_Async();\r\n    });\r\n}\r\n","import Global_Table_Config from \"./common_func\";\r\n\r\nif (front_end_data.isProActive) {\r\n    $(document).ready(function () {\r\n        class Data_Tables_Default {\r\n            constructor() {\r\n                this.frontend_table = $(\".gswpts_tables_container\");\r\n                if (front_end_data.asynchronous_loading == \"off\") {\r\n                    this.events();\r\n                } else {\r\n                    return;\r\n                }\r\n            }\r\n            events() {\r\n                this.get_frontend_table();\r\n            }\r\n\r\n            get_frontend_table() {\r\n                $.each(this.frontend_table, function (i, elem) {\r\n                    let table_settings = JSON.parse($(elem).attr(\"data-table_settings\"));\r\n\r\n                    let table_name = $(elem).attr(\"data-table_name\");\r\n\r\n                    let table_obj = new Global_Table_Config();\r\n\r\n                    table_obj.table_configuration($, i, elem, table_name, table_settings);\r\n                });\r\n            }\r\n        }\r\n\r\n        new Data_Tables_Default();\r\n    });\r\n} else {\r\n    jQuery(document).ready(function ($) {\r\n        class Data_Tables_Default {\r\n            constructor() {\r\n                this.frontend_table = $(\".gswpts_tables_container\");\r\n                if (front_end_data.asynchronous_loading == \"off\") {\r\n                    this.events();\r\n                } else {\r\n                    return;\r\n                }\r\n            }\r\n            events() {\r\n                this.get_frontend_table();\r\n            }\r\n\r\n            get_frontend_table() {\r\n                $.each(this.frontend_table, function (i, elem) {\r\n                    let table_settings = JSON.parse($(elem).attr(\"data-table_settings\"));\r\n\r\n                    let table_name = $(elem).attr(\"data-table_name\");\r\n\r\n                    let table_obj = new Global_Table_Config();\r\n\r\n                    table_obj.table_configuration($, i, elem, table_name, table_settings);\r\n                });\r\n            }\r\n        }\r\n\r\n        new Data_Tables_Default();\r\n    });\r\n}\r\n"],"sourceRoot":""}