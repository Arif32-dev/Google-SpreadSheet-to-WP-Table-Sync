{"version":3,"sources":["webpack://google-spreadsheet-to-wp-table-sync/./Assets/Src/Scripts/Chunk/Frontend/common_func.js","webpack://google-spreadsheet-to-wp-table-sync/./Assets/Src/Scripts/Chunk/Frontend/data_tables_async.js","webpack://google-spreadsheet-to-wp-table-sync/./Assets/Src/Scripts/Chunk/Frontend/data_table_default.js"],"names":["Global_Table_Config","$","i","elem","table_name","table_settings","dom","show_x_entries","search_bar","show_info_block","find","DataTable","this","table_obj","swap_input_filter","swap_bottom_options","parseInt","default_rows_per_page","allow_sorting","export_btns","table_export","forEach","btn","removeClass","swap_filter_inputs","css","pagination_menu","style","flex_direction","table_info_style","margin_left","margin_right","table_paginate_style","children","length","overflow_menu_style","bottom_option_style","$arg","jQuery","document","ready","frontend_table","front_end_data","asynchronous_loading","events","get_frontend_table","each","id","attr","ajax","url","admin_ajax","data","action","type","success","res","console","log","JSON","parse","response_type","table_data","table_title","html","output","table_configuration","alert","error","err"],"mappings":"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","file":"Scripts/Frontend/frontend.min.js","sourcesContent":["export default class Global_Table_Config {\n    table_configuration($, i, elem, table_name, table_settings) {\n\n        // let dom = `B<\"filtering_input filtering_input_${i}\"${table_settings.show_x_entries == 'true' ? 'l' : ''}${table_settings.search_bar == 'true' ? 'f' : ''}>rt<\"bottom_options bottom_options_${i}\"${table_settings.show_info_block == 'true' ? 'i' : ''}p>`;\n        let dom = `<\"filtering_input filtering_input_${i}\"${table_settings.show_x_entries == 'true' ? 'l' : ''}${table_settings.search_bar == 'true' ? 'f' : ''}>rt<\"bottom_options bottom_options_${i}\"${table_settings.show_info_block == 'true' ? 'i' : ''}p>`;\n        $(elem).find('#create_tables').DataTable(\n            this.table_obj($, table_name, table_settings, dom)\n        );\n\n        // this.reveal_export_btns(elem, table_settings);\n\n        this.swap_input_filter($, i, table_settings);\n\n        this.swap_bottom_options($, i, table_settings);\n\n    }\n\n    table_obj($, table_name, table_settings, dom) {\n\n        let table_object = {\n            dom: dom,\n            // buttons: [{\n            //     text: 'JSON { }',\n            //     className: 'ui inverted yellow button export_btns json_btn',\n            //     action: function (e, dt, button, config) {\n            //         var data = dt.buttons.exportData();\n\n            //         $.fn.dataTable.fileSave(\n            //             new Blob([JSON.stringify(data)]),\n            //             `${table_name}.json`\n            //         );\n            //     }\n            // },\n            // {\n            //     text: 'PDF &nbsp;<i class=\"fas fa-file-pdf\"></i>',\n            //     extend: 'pdf',\n            //     className: 'ui inverted red button export_btns pdf_btn',\n            //     title: `${table_name}`\n            // },\n            // {\n            //     text: 'CSV &nbsp; <i class=\"fas fa-file-csv\"></i>',\n            //     extend: 'csv',\n            //     className: 'ui inverted green button export_btns csv_btn',\n            //     title: `${table_name}`\n            // },\n            // {\n            //     text: 'Excel &nbsp; <i class=\"fas fa-file-excel\"></i>',\n            //     extend: 'excel',\n            //     className: 'ui inverted green button export_btns excel_btn',\n            //     title: `${table_name}`\n            // },\n            // {\n            //     text: 'Print &nbsp; <i class=\"fas fa-print\"></i>',\n            //     extend: 'print',\n            //     className: 'ui inverted secondary button export_btns print_btn',\n            //     title: `${table_name}`\n            // },\n            // {\n            //     text: 'Copy &nbsp; <i class=\"fas fa-copy\"></i>',\n            //     extend: 'copy',\n            //     className: 'ui inverted violet button export_btns copy_btn',\n            //     title: `${table_name}`\n            // }\n\n            // ],\n\n            \"order\": [],\n            \"responsive\": true,\n            \"lengthMenu\": [\n                [1, 5, 10, 15],\n                [1, 5, 10, 15]\n            ],\n            \"pageLength\": parseInt(table_settings.default_rows_per_page),\n            \"lengthChange\": true,\n            \"ordering\": table_settings.allow_sorting == 'true' ? true : false,\n            \"destroy\": true,\n            \"scrollX\": true\n        }\n\n        return table_object;\n    }\n\n    reveal_export_btns($, elem, table_settings) {\n        let export_btns = table_settings.table_export;\n        if (export_btns != 'empty') {\n            export_btns.forEach(btn => {\n                $(elem).find('.' + btn + '_btn').removeClass('export_btns');\n            });\n        }\n    }\n\n    swap_input_filter($, i, table_settings) {\n        /* If checkbox is checked then swap filter */\n        if (table_settings.swap_filter_inputs == 'true') {\n            $('.filtering_input_' + i + '').css('flex-direction', 'row-reverse');\n            $('.filtering_input_' + i + ' > #create_tables_length').css({\n                'margin-right': '0',\n                'margin-left': 'auto'\n            });\n            $('.filtering_input_' + i + ' > #create_tables_filter').css({\n                'margin-left': '0',\n                'margin-right': 'auto',\n            });\n        } else {\n            /* Set back to default position */\n            $('.filtering_input_' + i + '').css('flex-direction', 'row');\n            $('.filtering_input_' + i + ' > #create_tables_length').css({\n                'margin-right': 'auto',\n                'margin-left': '0'\n            });\n            $('.filtering_input_' + i + ' > #create_tables_filter').css({\n                'margin-left': 'auto',\n                'margin-right': '0',\n            });\n        }\n    }\n\n    swap_bottom_options($, i, table_settings) {\n\n        let pagination_menu = $('.bottom_options_' + i + ' .pagination.menu')\n\n\n        let style = {\n            flex_direction: 'row-reverse',\n            table_info_style: {\n                margin_left: 'auto',\n                margin_right: 0\n            },\n            table_paginate_style: {\n                margin_left: 0,\n                margin_right: 'auto'\n            }\n        }\n\n        if (table_settings.swap_bottom_options == 'true') {\n\n            if (pagination_menu.children().length > 5) {\n                this.overflow_menu_style($)\n            } else {\n                this.bottom_option_style($, style, i)\n            }\n\n        } else {\n\n            if (pagination_menu.children().length > 5) {\n                this.overflow_menu_style($, i)\n            } else {\n\n                style['flex_direction'] = 'row'\n\n                style.table_info_style['margin_left'] = 0\n                style.table_info_style['margin_right'] = 'auto'\n\n                style.table_paginate_style['margin_left'] = 'auto'\n                style.table_paginate_style['margin_right'] = 0\n\n                this.bottom_option_style($, style, i)\n\n            }\n        }\n    }\n\n    overflow_menu_style($, i) {\n        $('.bottom_options_' + i + '').css('flex-direction', 'column');\n        $('.bottom_options_' + i + ' > #create_tables_info').css({\n            'margin': '5px auto',\n        });\n        $('.bottom_options_' + i + ' > #create_tables_paginate').css({\n            'margin': '5px auto',\n        });\n    }\n\n    bottom_option_style($, $arg, i) {\n\n        $('.bottom_options_' + i + '').css('flex-direction', $arg['flex_direction']);\n        $('.bottom_options_' + i + ' > #create_tables_info').css({\n            'margin-left': $arg['table_info_style']['margin_left'],\n            'margin-right': $arg['table_info_style']['margin_right']\n        });\n        $('.bottom_options_' + i + ' > #create_tables_paginate').css({\n            'margin-left': $arg['table_paginate_style']['margin_left'],\n            'margin-right': $arg['table_paginate_style']['margin_right'],\n        });\n\n    }\n\n    html_loader() {\n        let loader = `\n               <div class=\"ui segment gswpts_table_loader\">\n                        <div class=\"ui active inverted dimmer\">\n                            <div class=\"ui large text loader\">Loading</div>\n                        </div>\n                        <p></p>\n                        <p></p>\n                        <p></p>\n                </div>\n            `\n        return loader;\n    }\n}","import Global_Table_Config from './common_func';\n\n\njQuery(document).ready(function ($) {\n    class Data_Tables_Async {\n        constructor() {\n            this.frontend_table = $('.gswpts_tables_container');\n            if (front_end_data.asynchronous_loading == 'on') {\n                this.events();\n            } else {\n                return;\n            }\n        }\n        events() {\n            this.get_frontend_table();\n        }\n\n        get_frontend_table() {\n            $.each(this.frontend_table, function (i, elem) {\n                let id = $(elem).attr('id');\n                $.ajax({\n                    url: front_end_data.admin_ajax,\n\n                    data: {\n                        action: 'gswpts_sheet_fetch',\n                        id: id\n                    },\n                    type: 'post',\n\n                    success: res => {\n                        console.log(JSON.parse(res))\n                        if (JSON.parse(res).response_type == 'success') {\n\n                            let table_settings = JSON.parse(JSON.parse(res).table_data.table_settings);\n\n                            // if (table_settings.responsive_table == 'true') {\n                            //     $(elem).addClass('gswpts_resposive');\n                            // }\n\n                            if (table_settings.table_title == 'true') {\n                                $(elem).find('h3').html(JSON.parse(res).table_data.table_name);\n                            }\n\n                            $(elem).find('.gswpts_tables_content').html(JSON.parse(res).output);\n\n                            let table_name = JSON.parse(res).table_data.table_name\n\n                            let table_obj = new Global_Table_Config();\n\n                            table_obj.table_configuration($, i, elem, table_name, table_settings)\n\n                        } else {\n                            alert('Table could not be loaded. Try again');\n                            $(elem).find('.gswpts_tables_content').html(\"<strong>Table could not be loaded. Try again</strong>\");\n                        }\n                    },\n\n                    error: err => {\n                        alert('Something went wrong')\n                    },\n\n                })\n            });\n\n        }\n\n    }\n    new Data_Tables_Async;\n})","import Global_Table_Config from './common_func';\n\njQuery(document).ready(function ($) {\n    class Data_Tables_Default {\n        constructor() {\n\n            this.frontend_table = $('.gswpts_tables_container');\n            if (front_end_data.asynchronous_loading == 'off') {\n                this.events();\n            } else {\n                return;\n            }\n        }\n        events() {\n            this.get_frontend_table();\n        }\n\n        get_frontend_table() {\n            $.each(this.frontend_table, function (i, elem) {\n\n                let table_settings = JSON.parse($(elem).attr('data-table_settings'));\n\n                let table_name = $(elem).attr('data-table_name')\n\n                let table_obj = new Global_Table_Config();\n\n                table_obj.table_configuration($, i, elem, table_name, table_settings)\n\n            });\n\n        }\n\n    }\n    new Data_Tables_Default;\n})"],"sourceRoot":""}