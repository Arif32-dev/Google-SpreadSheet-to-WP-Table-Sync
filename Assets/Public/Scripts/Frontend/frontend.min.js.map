{"version":3,"sources":["webpack://google-spreadsheet-to-wp-table-sync/./Assets/Src/Scripts/Chunk/Frontend/common_func.js","webpack://google-spreadsheet-to-wp-table-sync/./Assets/Src/Scripts/Chunk/Frontend/data_tables_async.js","webpack://google-spreadsheet-to-wp-table-sync/./Assets/Src/Scripts/Chunk/Frontend/data_table_default.js"],"names":["Global_Table_Config","$","i","elem","table_name","table_settings","dom","show_x_entries","search_bar","show_info_block","this","isProPluginActive","find","DataTable","table_obj","reveal_export_btns","swap_input_filter","swap_bottom_options","front_end_data","isProActive","table_object","order","responsive","lengthMenu","pageLength","parseInt","default_rows_per_page","lengthChange","ordering","allow_sorting","destroy","scrollX","buttons","text","iconsURL","curlyBrackets","className","action","e","dt","button","config","data","exportData","fn","dataTable","fileSave","Blob","JSON","stringify","filePdf","extend","title","fileCSV","fileExcel","printIcon","copySolid","scrollY","vertical_scroll","export_btns","table_export","forEach","btn","removeClass","swap_filter_inputs","css","pagination_menu","style","flex_direction","table_info_style","margin_left","margin_right","table_paginate_style","children","length","overflow_menu_style","bottom_option_style","margin","$arg","jQuery","document","ready","frontend_table","asynchronous_loading","events","get_frontend_table","each","id","attr","ajax","url","admin_ajax","type","success","res","console","log","parse","response_type","table_data","responsive_table","addClass","table_title","html","output","table_configuration","alert","error","err"],"mappings":"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","file":"Scripts/Frontend/frontend.min.js","sourcesContent":["export default class Global_Table_Config {\r\n    table_configuration($, i, elem, table_name, table_settings) {\r\n        let dom = `<\"filtering_input filtering_input_${i}\"${\r\n            table_settings.show_x_entries == \"true\" ? \"l\" : \"\"\r\n        }${table_settings.search_bar == \"true\" ? \"f\" : \"\"}>rt<\"bottom_options bottom_options_${i}\"${\r\n            table_settings.show_info_block == \"true\" ? \"i\" : \"\"\r\n        }p>`;\r\n\r\n        if (this.isProPluginActive()) {\r\n            dom = `B<\"filtering_input filtering_input_${i}\"${\r\n                table_settings.show_x_entries == \"true\" ? \"l\" : \"\"\r\n            }${\r\n                table_settings.search_bar == \"true\" ? \"f\" : \"\"\r\n            }>rt<\"bottom_options bottom_options_${i}\"${\r\n                table_settings.show_info_block == \"true\" ? \"i\" : \"\"\r\n            }p>`;\r\n        }\r\n\r\n        $(elem)\r\n            .find(\"#create_tables\")\r\n            .DataTable(this.table_obj($, table_name, table_settings, dom));\r\n\r\n        if (this.isProPluginActive()) {\r\n            this.reveal_export_btns($, elem, table_settings);\r\n        }\r\n\r\n        this.swap_input_filter($, i, table_settings);\r\n\r\n        this.swap_bottom_options($, i, table_settings);\r\n    }\r\n\r\n    isProPluginActive() {\r\n        if (front_end_data.isProActive) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    table_obj($, table_name, table_settings, dom) {\r\n        let table_object = {\r\n            dom: dom,\r\n            order: [],\r\n            responsive: true,\r\n            lengthMenu: [\r\n                [1, 5, 10, 15],\r\n                [1, 5, 10, 15],\r\n            ],\r\n            pageLength: parseInt(table_settings.default_rows_per_page),\r\n            lengthChange: true,\r\n            ordering: table_settings.allow_sorting == \"true\" ? true : false,\r\n            destroy: true,\r\n            scrollX: true,\r\n        };\r\n\r\n        if (this.isProPluginActive()) {\r\n            table_object.buttons = [\r\n                {\r\n                    text: `JSON &nbsp;<img src=\"${front_end_data.iconsURL.curlyBrackets}\" />`,\r\n                    className: \"ui inverted yellow button export_btns json_btn\",\r\n                    action: function (e, dt, button, config) {\r\n                        var data = dt.buttons.exportData();\r\n                        $.fn.dataTable.fileSave(\r\n                            new Blob([JSON.stringify(data)]),\r\n                            `${table_name}.json`\r\n                        );\r\n                    },\r\n                },\r\n                {\r\n                    text: `PDF &nbsp;<img src=\"${front_end_data.iconsURL.filePdf}\" />`,\r\n                    extend: \"pdf\",\r\n                    className: \"ui inverted red button export_btns pdf_btn\",\r\n                    title: `${table_name}`,\r\n                },\r\n                {\r\n                    text: `CSV &nbsp;<img src=\"${front_end_data.iconsURL.fileCSV}\" />`,\r\n                    extend: \"csv\",\r\n                    className: \"ui inverted green button export_btns csv_btn\",\r\n                    title: `${table_name}`,\r\n                },\r\n                {\r\n                    text: `Excel &nbsp;<img src=\"${front_end_data.iconsURL.fileExcel}\" />`,\r\n                    extend: \"excel\",\r\n                    className: \"ui inverted green button export_btns excel_btn\",\r\n                    title: `${table_name}`,\r\n                },\r\n                {\r\n                    text: `Print &nbsp;<img src=\"${front_end_data.iconsURL.printIcon}\" />`,\r\n                    extend: \"print\",\r\n                    className: \"ui inverted secondary button export_btns print_btn\",\r\n                    title: `${table_name}`,\r\n                },\r\n                {\r\n                    text: `Copy &nbsp;<img src=\"${front_end_data.iconsURL.copySolid}\" />`,\r\n                    extend: \"copy\",\r\n                    className: \"ui inverted violet button export_btns copy_btn\",\r\n                    title: `${table_name}`,\r\n                },\r\n            ];\r\n\r\n            table_object.lengthMenu = [\r\n                [1, 5, 10, 15, 25, 50, 100, -1],\r\n                [1, 5, 10, 15, 25, 50, 100, \"All\"],\r\n            ];\r\n\r\n            table_object.scrollY = `${table_settings.vertical_scroll}px`;\r\n        }\r\n\r\n        return table_object;\r\n    }\r\n\r\n    reveal_export_btns($, elem, table_settings) {\r\n        if (!table_settings) return;\r\n\r\n        let export_btns = table_settings.table_export;\r\n\r\n        if (export_btns != \"empty\" && export_btns) {\r\n            export_btns.forEach((btn) => {\r\n                $(elem)\r\n                    .find(\".\" + btn + \"_btn\")\r\n                    .removeClass(\"export_btns\");\r\n            });\r\n        }\r\n    }\r\n\r\n    swap_input_filter($, i, table_settings) {\r\n        /* If checkbox is checked then swap filter */\r\n        if (table_settings.swap_filter_inputs == \"true\") {\r\n            $(\".filtering_input_\" + i + \"\").css(\"flex-direction\", \"row-reverse\");\r\n            $(\".filtering_input_\" + i + \" > #create_tables_length\").css({\r\n                \"margin-right\": \"0\",\r\n                \"margin-left\": \"auto\",\r\n            });\r\n            $(\".filtering_input_\" + i + \" > #create_tables_filter\").css({\r\n                \"margin-left\": \"0\",\r\n                \"margin-right\": \"auto\",\r\n            });\r\n        } else {\r\n            /* Set back to default position */\r\n            $(\".filtering_input_\" + i + \"\").css(\"flex-direction\", \"row\");\r\n            $(\".filtering_input_\" + i + \" > #create_tables_length\").css({\r\n                \"margin-right\": \"auto\",\r\n                \"margin-left\": \"0\",\r\n            });\r\n            $(\".filtering_input_\" + i + \" > #create_tables_filter\").css({\r\n                \"margin-left\": \"auto\",\r\n                \"margin-right\": \"0\",\r\n            });\r\n        }\r\n    }\r\n\r\n    swap_bottom_options($, i, table_settings) {\r\n        let pagination_menu = $(\".bottom_options_\" + i + \" .pagination.menu\");\r\n\r\n        let style = {\r\n            flex_direction: \"row-reverse\",\r\n            table_info_style: {\r\n                margin_left: \"auto\",\r\n                margin_right: 0,\r\n            },\r\n            table_paginate_style: {\r\n                margin_left: 0,\r\n                margin_right: \"auto\",\r\n            },\r\n        };\r\n\r\n        if (table_settings.swap_bottom_options == \"true\") {\r\n            if (pagination_menu.children().length > 5) {\r\n                this.overflow_menu_style($);\r\n            } else {\r\n                this.bottom_option_style($, style, i);\r\n            }\r\n        } else {\r\n            if (pagination_menu.children().length > 5) {\r\n                this.overflow_menu_style($, i);\r\n            } else {\r\n                style[\"flex_direction\"] = \"row\";\r\n\r\n                style.table_info_style[\"margin_left\"] = 0;\r\n                style.table_info_style[\"margin_right\"] = \"auto\";\r\n\r\n                style.table_paginate_style[\"margin_left\"] = \"auto\";\r\n                style.table_paginate_style[\"margin_right\"] = 0;\r\n\r\n                this.bottom_option_style($, style, i);\r\n            }\r\n        }\r\n    }\r\n\r\n    overflow_menu_style($, i) {\r\n        $(\".bottom_options_\" + i + \"\").css(\"flex-direction\", \"column\");\r\n        $(\".bottom_options_\" + i + \" > #create_tables_info\").css({\r\n            margin: \"5px auto\",\r\n        });\r\n        $(\".bottom_options_\" + i + \" > #create_tables_paginate\").css({\r\n            margin: \"5px auto\",\r\n        });\r\n    }\r\n\r\n    bottom_option_style($, $arg, i) {\r\n        $(\".bottom_options_\" + i + \"\").css(\"flex-direction\", $arg[\"flex_direction\"]);\r\n        $(\".bottom_options_\" + i + \" > #create_tables_info\").css({\r\n            \"margin-left\": $arg[\"table_info_style\"][\"margin_left\"],\r\n            \"margin-right\": $arg[\"table_info_style\"][\"margin_right\"],\r\n        });\r\n        $(\".bottom_options_\" + i + \" > #create_tables_paginate\").css({\r\n            \"margin-left\": $arg[\"table_paginate_style\"][\"margin_left\"],\r\n            \"margin-right\": $arg[\"table_paginate_style\"][\"margin_right\"],\r\n        });\r\n    }\r\n\r\n    html_loader() {\r\n        let loader = `\r\n               <div class=\"ui segment gswpts_table_loader\">\r\n                        <div class=\"ui active inverted dimmer\">\r\n                            <div class=\"ui large text loader\">Loading</div>\r\n                        </div>\r\n                        <p></p>\r\n                        <p></p>\r\n                        <p></p>\r\n                </div>\r\n            `;\r\n        return loader;\r\n    }\r\n}\r\n","import Global_Table_Config from './common_func';\r\n\r\n\r\njQuery(document).ready(function($) {\r\n    class Data_Tables_Async {\r\n        constructor() {\r\n            this.frontend_table = $('.gswpts_tables_container');\r\n            if (front_end_data.asynchronous_loading == 'on') {\r\n                this.events();\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n        events() {\r\n            this.get_frontend_table();\r\n        }\r\n\r\n        get_frontend_table() {\r\n            $.each(this.frontend_table, function(i, elem) {\r\n                let id = $(elem).attr('id');\r\n                $.ajax({\r\n                    url: front_end_data.admin_ajax,\r\n\r\n                    data: {\r\n                        action: 'gswpts_sheet_fetch',\r\n                        id: id\r\n                    },\r\n\r\n                    type: 'post',\r\n\r\n                    success: res => {\r\n                        console.log(JSON.parse(res))\r\n                        if (JSON.parse(res).response_type == 'success') {\r\n\r\n                            let table_settings = JSON.parse(JSON.parse(res).table_data.table_settings);\r\n\r\n                            if (table_settings.responsive_table == 'true') {\r\n                                $(elem).addClass('gswpts_resposive');\r\n                            }\r\n\r\n                            if (table_settings.table_title == 'true') {\r\n                                $(elem).find('h3').html(JSON.parse(res).table_data.table_name);\r\n                            }\r\n\r\n                            $(elem).find('.gswpts_tables_content').html(JSON.parse(res).output);\r\n\r\n                            let table_name = JSON.parse(res).table_data.table_name\r\n\r\n                            let table_obj = new Global_Table_Config();\r\n\r\n                            table_obj.table_configuration($, i, elem, table_name, table_settings)\r\n\r\n                        } else {\r\n                            alert('Table could not be loaded. Try again');\r\n                            $(elem).find('.gswpts_tables_content').html(\"<strong>Table could not be loaded. Try again</strong>\");\r\n                        }\r\n                    },\r\n\r\n                    error: err => {\r\n                        alert('Something went wrong')\r\n                        $(elem).find('.gswpts_tables_content').html(\"<strong>Table could not be loaded. Try again</strong>\");\r\n                    },\r\n\r\n                })\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n    new Data_Tables_Async;\r\n})","import Global_Table_Config from './common_func';\r\n\r\njQuery(document).ready(function ($) {\r\n    class Data_Tables_Default {\r\n        constructor() {\r\n\r\n            this.frontend_table = $('.gswpts_tables_container');\r\n            if (front_end_data.asynchronous_loading == 'off') {\r\n                this.events();\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n        events() {\r\n            this.get_frontend_table();\r\n        }\r\n\r\n        get_frontend_table() {\r\n            $.each(this.frontend_table, function (i, elem) {\r\n\r\n                let table_settings = JSON.parse($(elem).attr('data-table_settings'));\r\n\r\n                let table_name = $(elem).attr('data-table_name')\r\n\r\n                let table_obj = new Global_Table_Config();\r\n\r\n                table_obj.table_configuration($, i, elem, table_name, table_settings)\r\n\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n    new Data_Tables_Default;\r\n})"],"sourceRoot":""}