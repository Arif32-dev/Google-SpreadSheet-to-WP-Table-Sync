{"version":3,"sources":["webpack://google-spreadsheet-to-wp-table-sync/./Assets/Src/Scripts/Chunk/Frontend/common_func.js","webpack://google-spreadsheet-to-wp-table-sync/./Assets/Src/Scripts/Chunk/Frontend/data_tables_async.js","webpack://google-spreadsheet-to-wp-table-sync/./Assets/Src/Scripts/Chunk/Frontend/data_table_default.js"],"names":["Global_Table_Config","i","elem","table_name","table_settings","dom","show_x_entries","search_bar","show_info_block","$","find","DataTable","this","table_obj","swap_input_filter","swap_bottom_options","parseInt","default_rows_per_page","allow_sorting","export_btns","table_export","forEach","btn","removeClass","swap_filter_inputs","css","document","ready","frontend_table","front_end_data","asynchronous_loading","events","get_frontend_table","each","id","attr","ajax","url","admin_ajax","data","action","type","success","res","console","log","JSON","parse","response_type","table_data","table_title","html","output","table_configuration","alert","error","err"],"mappings":"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","file":"Scripts/Frontend/frontend.min.js","sourcesContent":["\r\nexport default class Global_Table_Config {\r\n    table_configuration(i, elem, table_name, table_settings) {\r\n\r\n        // let dom = `B<\"filtering_input filtering_input_${i}\"${table_settings.show_x_entries == 'true' ? 'l' : ''}${table_settings.search_bar == 'true' ? 'f' : ''}>rt<\"bottom_options bottom_options_${i}\"${table_settings.show_info_block == 'true' ? 'i' : ''}p>`;\r\n        let dom = `<\"filtering_input filtering_input_${i}\"${table_settings.show_x_entries == 'true' ? 'l' : ''}${table_settings.search_bar == 'true' ? 'f' : ''}>rt<\"bottom_options bottom_options_${i}\"${table_settings.show_info_block == 'true' ? 'i' : ''}p>`;\r\n        $(elem).find('#create_tables').DataTable(\r\n            this.table_obj(table_name, table_settings, dom)\r\n        );\r\n\r\n        // this.reveal_export_btns(elem, table_settings);\r\n\r\n        this.swap_input_filter(i, table_settings);\r\n\r\n        this.swap_bottom_options(i, table_settings);\r\n\r\n    }\r\n\r\n    table_obj(table_name, table_settings, dom) {\r\n\r\n        let table_object = {\r\n            dom: dom,\r\n            // buttons: [{\r\n            //     text: 'JSON { }',\r\n            //     className: 'ui inverted yellow button export_btns json_btn',\r\n            //     action: function (e, dt, button, config) {\r\n            //         var data = dt.buttons.exportData();\r\n\r\n            //         $.fn.dataTable.fileSave(\r\n            //             new Blob([JSON.stringify(data)]),\r\n            //             `${table_name}.json`\r\n            //         );\r\n            //     }\r\n            // },\r\n            // {\r\n            //     text: 'PDF &nbsp;<i class=\"fas fa-file-pdf\"></i>',\r\n            //     extend: 'pdf',\r\n            //     className: 'ui inverted red button export_btns pdf_btn',\r\n            //     title: `${table_name}`\r\n            // },\r\n            // {\r\n            //     text: 'CSV &nbsp; <i class=\"fas fa-file-csv\"></i>',\r\n            //     extend: 'csv',\r\n            //     className: 'ui inverted green button export_btns csv_btn',\r\n            //     title: `${table_name}`\r\n            // },\r\n            // {\r\n            //     text: 'Excel &nbsp; <i class=\"fas fa-file-excel\"></i>',\r\n            //     extend: 'excel',\r\n            //     className: 'ui inverted green button export_btns excel_btn',\r\n            //     title: `${table_name}`\r\n            // },\r\n            // {\r\n            //     text: 'Print &nbsp; <i class=\"fas fa-print\"></i>',\r\n            //     extend: 'print',\r\n            //     className: 'ui inverted secondary button export_btns print_btn',\r\n            //     title: `${table_name}`\r\n            // },\r\n            // {\r\n            //     text: 'Copy &nbsp; <i class=\"fas fa-copy\"></i>',\r\n            //     extend: 'copy',\r\n            //     className: 'ui inverted violet button export_btns copy_btn',\r\n            //     title: `${table_name}`\r\n            // }\r\n\r\n            // ],\r\n\r\n            \"order\": [],\r\n            \"responsive\": true,\r\n            \"lengthMenu\": [\r\n                [1, 5, 10, 15],\r\n                [1, 5, 10, 15]\r\n            ],\r\n            \"pageLength\": parseInt(table_settings.default_rows_per_page),\r\n            \"lengthChange\": true,\r\n            \"ordering\": table_settings.allow_sorting == 'true' ? true : false,\r\n            \"destroy\": true,\r\n            \"scrollX\": true\r\n        }\r\n\r\n        return table_object;\r\n    }\r\n\r\n    reveal_export_btns(elem, table_settings) {\r\n        let export_btns = table_settings.table_export;\r\n        if (export_btns != 'empty') {\r\n            export_btns.forEach(btn => {\r\n                $(elem).find('.' + btn + '_btn').removeClass('export_btns');\r\n            });\r\n        }\r\n    }\r\n\r\n    swap_input_filter(i, table_settings) {\r\n        /* If checkbox is checked then swap filter */\r\n        if (table_settings.swap_filter_inputs == 'true') {\r\n            $('.filtering_input_' + i + '').css('flex-direction', 'row-reverse');\r\n            $('.filtering_input_' + i + ' > #create_tables_length').css({\r\n                'margin-right': '0',\r\n                'margin-left': 'auto'\r\n            });\r\n            $('.filtering_input_' + i + ' > #create_tables_filter').css({\r\n                'margin-left': '0',\r\n                'margin-right': 'auto',\r\n            });\r\n        } else {\r\n            /* Set back to default position */\r\n            $('.filtering_input_' + i + '').css('flex-direction', 'row');\r\n            $('.filtering_input_' + i + ' > #create_tables_length').css({\r\n                'margin-right': 'auto',\r\n                'margin-left': '0'\r\n            });\r\n            $('.filtering_input_' + i + ' > #create_tables_filter').css({\r\n                'margin-left': 'auto',\r\n                'margin-right': '0',\r\n            });\r\n        }\r\n    }\r\n\r\n    swap_bottom_options(i, table_settings) {\r\n        if (table_settings.swap_bottom_options == 'true') {\r\n            $('.bottom_options_' + i + '').css('flex-direction', 'row-reverse');\r\n            $('.bottom_options_' + i + ' > #create_tables_info').css({\r\n                'margin-right': '0',\r\n                'margin-left': 'auto'\r\n            });\r\n            $('.bottom_options_' + i + ' > #create_tables_paginate').css({\r\n                'margin-left': '0',\r\n                'margin-right': 'auto',\r\n            });\r\n        } else {\r\n            $('.bottom_options_' + i + '').css('flex-direction', 'row');\r\n            $('.bottom_options_' + i + ' > #create_tables_info').css({\r\n                'margin-right': 'auto',\r\n                'margin-left': '0'\r\n            });\r\n            $('.bottom_options_' + i + ' > #create_tables_paginate').css({\r\n                'margin-left': 'auto',\r\n                'margin-right': '0',\r\n            });\r\n        }\r\n    }\r\n    html_loader() {\r\n        let loader = `\r\n               <div class=\"ui segment gswpts_table_loader\">\r\n                        <div class=\"ui active inverted dimmer\">\r\n                            <div class=\"ui large text loader\">Loading</div>\r\n                        </div>\r\n                        <p></p>\r\n                        <p></p>\r\n                        <p></p>\r\n                </div>\r\n            `\r\n        return loader;\r\n    }\r\n}","import Global_Table_Config from './common_func';\r\n\r\n\r\n$(document).ready(function () {\r\n    class Data_Tables_Async {\r\n        constructor() {\r\n            this.frontend_table = $('.gswpts_tables_container');\r\n            if (front_end_data.asynchronous_loading == 'on') {\r\n                this.events();\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n        events() {\r\n            this.get_frontend_table();\r\n        }\r\n\r\n        get_frontend_table() {\r\n            $.each(this.frontend_table, function (i, elem) {\r\n                let id = $(elem).attr('id');\r\n                $.ajax({\r\n                    url: front_end_data.admin_ajax,\r\n\r\n                    data: {\r\n                        action: 'gswpts_sheet_fetch',\r\n                        id: id\r\n                    },\r\n                    type: 'post',\r\n\r\n                    success: res => {\r\n                        console.log(JSON.parse(res))\r\n                        if (JSON.parse(res).response_type == 'success') {\r\n\r\n                            let table_settings = JSON.parse(JSON.parse(res).table_data.table_settings);\r\n\r\n                            // if (table_settings.responsive_table == 'true') {\r\n                            //     $(elem).addClass('gswpts_resposive');\r\n                            // }\r\n\r\n                            if (table_settings.table_title == 'true') {\r\n                                $(elem).find('h3').html(JSON.parse(res).table_data.table_name);\r\n                            }\r\n\r\n                            $(elem).find('.gswpts_tables_content').html(JSON.parse(res).output);\r\n\r\n                            let table_name = JSON.parse(res).table_data.table_name\r\n\r\n                            let table_obj = new Global_Table_Config();\r\n\r\n                            table_obj.table_configuration(i, elem, table_name, table_settings)\r\n\r\n                        } else {\r\n                            alert('Table could not be loaded. Try again');\r\n                            $(elem).find('.gswpts_tables_content').html(\"<strong>Table could not be loaded. Try again</strong>\");\r\n                        }\r\n                    },\r\n\r\n                    error: err => {\r\n                        alert('Something went wrong')\r\n                    },\r\n\r\n                })\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n    new Data_Tables_Async;\r\n})","import Global_Table_Config from './common_func';\r\n\r\n$(document).ready(function () {\r\n    class Data_Tables_Default {\r\n        constructor() {\r\n            this.frontend_table = $('.gswpts_tables_container');\r\n            if (front_end_data.asynchronous_loading == 'off') {\r\n                this.events();\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n        events() {\r\n            this.get_frontend_table();\r\n        }\r\n\r\n        get_frontend_table() {\r\n            $.each(this.frontend_table, function (i, elem) {\r\n\r\n                let table_settings = JSON.parse($(elem).attr('data-table_settings'));\r\n\r\n                let table_name = $(elem).attr('data-table_name')\r\n\r\n                let table_obj = new Global_Table_Config();\r\n\r\n                table_obj.table_configuration(i, elem, table_name, table_settings)\r\n\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n    new Data_Tables_Default;\r\n})"],"sourceRoot":""}