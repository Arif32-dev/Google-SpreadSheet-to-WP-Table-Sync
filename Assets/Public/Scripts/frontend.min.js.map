{"version":3,"sources":["webpack://google-spreadsheet-to-wp-table-sync/./Assets/Src/Scripts/Chunk/Frontend/data_tables_frontend.js","webpack://google-spreadsheet-to-wp-table-sync/./Assets/Src/Scripts/Chunk/Frontend/exporter.js","webpack://google-spreadsheet-to-wp-table-sync/webpack/bootstrap","webpack://google-spreadsheet-to-wp-table-sync/webpack/runtime/compat get default export","webpack://google-spreadsheet-to-wp-table-sync/webpack/runtime/define property getters","webpack://google-spreadsheet-to-wp-table-sync/webpack/runtime/hasOwnProperty shorthand"],"names":["jQuery","document","ready","$","this","frontend_table","export_json_btn","export_csv_btn","export_pdf_btn","events","show_manage_tables","on","e","export_to_json","export_to_csv","export_to_pdf","DataTable","tableHTMLExport","type","filename","fn","extend","options","dataMe","defaults","separator","newline","ignoreColumns","ignoreRows","htmlContent","consoleLog","trimContent","quoteFields","utf8BOM","orientation","parseString","data","html","trim","text","download","element","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","table","filter","length","Error","output","rows","find","not","numCols","first","each","i","col","column","content","replace","toCsv","console","log","jsonExportArray","el","jsonHeaderArray","jsonArrayTd","index","css","push","jsonArray","header","toJson","JSON","stringify","__webpack_module_cache__","__webpack_require__","moduleId","exports","module","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call"],"mappings":"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","file":"frontend.min.js","sourcesContent":["\r\njQuery(document).ready(function ($) {\r\n    class Data_Tables_Frontend {\r\n        constructor() {\r\n            this.frontend_table = $('#create_tables');\r\n            this.export_json_btn = $('#gswpts_export_json');\r\n            this.export_csv_btn = $('#gswpts_export_csv');\r\n            this.export_pdf_btn = $('#gswpts_export_pdf');\r\n            this.events();\r\n        }\r\n        events() {\r\n            this.show_manage_tables();\r\n            this.export_json_btn.on('click', (e) => {\r\n                this.export_to_json()\r\n            })\r\n            this.export_csv_btn.on('click', (e) => {\r\n                this.export_to_csv()\r\n            })\r\n            this.export_pdf_btn.on('click', (e) => {\r\n                this.export_to_pdf()\r\n            })\r\n        }\r\n        show_manage_tables() {\r\n            this.frontend_table.DataTable({\r\n                \"order\": []\r\n            });\r\n        }\r\n        export_to_json(e) {\r\n            this.frontend_table.tableHTMLExport({ type: 'json', filename: 'sample.json' });\r\n        }\r\n        export_to_csv(e) {\r\n            this.frontend_table.tableHTMLExport({ type: 'csv', filename: 'sample.csv' });\r\n        }\r\n        export_to_pdf(e) {\r\n            // this.frontend_table.tableHTMLExport({ type: 'pdf', filename: 'sample.pdf' });\r\n        }\r\n    }\r\n    new Data_Tables_Frontend;\r\n})","(function ($) {\r\n\r\n\r\n\r\n    $.fn.extend({\r\n        tableHTMLExport: function (options) {\r\n\r\n            var defaults = {\r\n                separator: ',',\r\n                newline: '\\r\\n',\r\n                ignoreColumns: '',\r\n                ignoreRows: '',\r\n                type: 'csv',\r\n                htmlContent: false,\r\n                consoleLog: false,\r\n                trimContent: true,\r\n                quoteFields: true,\r\n                filename: 'tableHTMLExport.csv',\r\n                utf8BOM: true,\r\n                orientation: 'p' //only when exported to *pdf* \"portrait\" or \"landscape\" (or shortcuts \"p\" or \"l\")\r\n            };\r\n            var options = $.extend(defaults, options);\r\n\r\n\r\n            function quote(text) {\r\n                return '\"' + text.replace('\"', '\"\"') + '\"';\r\n            }\r\n\r\n\r\n            function parseString(data) {\r\n                let content_data;\r\n                if (defaults.htmlContent) {\r\n                    content_data = data.html().trim();\r\n                } else {\r\n                    content_data = data.text().trim();\r\n                }\r\n                return content_data;\r\n            }\r\n\r\n            function download(filename, text) {\r\n                var element = document.createElement('a');\r\n                element.setAttribute('href', 'data:text/csv;charset=utf-8,' + encodeURIComponent(text));\r\n                element.setAttribute('download', filename);\r\n\r\n                element.style.display = 'none';\r\n                document.body.appendChild(element);\r\n\r\n                element.click();\r\n\r\n                document.body.removeChild(element);\r\n            }\r\n\r\n            /**\r\n             * Convierte la tabla enviada a json\r\n             * @param el\r\n             * @returns {{header: *, data: Array}}\r\n             */\r\n            function toJson(el) {\r\n\r\n                var jsonHeaderArray = [];\r\n                $(el).find('thead').find('tr').not(options.ignoreRows).each(function () {\r\n                    var tdData = \"\";\r\n                    var jsonArrayTd = [];\r\n\r\n                    $(this).find('th').not(options.ignoreColumns).each(function (index, data) {\r\n                        if ($(this).css('display') != 'none') {\r\n                            jsonArrayTd.push(parseString($(this)));\r\n                        }\r\n                    });\r\n                    jsonHeaderArray.push(jsonArrayTd);\r\n\r\n                });\r\n\r\n                var jsonArray = [];\r\n                $(el).find('tbody').find('tr').not(options.ignoreRows).each(function () {\r\n                    var tdData = \"\";\r\n                    var jsonArrayTd = [];\r\n\r\n                    $(this).find('td').not(options.ignoreColumns).each(function (index, data) {\r\n                        if ($(this).css('display') != 'none') {\r\n                            jsonArrayTd.push(parseString($(this)));\r\n                        }\r\n                    });\r\n                    jsonArray.push(jsonArrayTd);\r\n\r\n                });\r\n\r\n\r\n                return { header: jsonHeaderArray[0], data: jsonArray };\r\n            }\r\n\r\n\r\n            /**\r\n             * Convierte la tabla enviada a csv o texto\r\n             * @param table\r\n             * @returns {string}\r\n             */\r\n            function toCsv(table) {\r\n                var output = \"\";\r\n\r\n                if (options.utf8BOM === true) {\r\n                    output += '\\ufeff';\r\n                }\r\n\r\n                var rows = table.find('tr').not(options.ignoreRows);\r\n\r\n                var numCols = rows.first().find(\"td,th\").not(options.ignoreColumns).length;\r\n\r\n                rows.each(function () {\r\n                    $(this).find(\"td,th\").not(options.ignoreColumns)\r\n                        .each(function (i, col) {\r\n                            var column = $(col);\r\n\r\n                            // Strip whitespaces\r\n                            var content = options.trimContent ? $.trim(column.text()) : column.text();\r\n\r\n                            output += options.quoteFields ? quote(content) : content;\r\n                            if (i !== numCols - 1) {\r\n                                output += options.separator;\r\n                            } else {\r\n                                output += options.newline;\r\n                            }\r\n                        });\r\n                });\r\n\r\n                return output;\r\n            }\r\n\r\n\r\n            var el = this;\r\n            var dataMe;\r\n            if (options.type == 'csv' || options.type == 'txt') {\r\n\r\n\r\n                var table = this.filter('table'); // TODO use $.each\r\n\r\n                if (table.length <= 0) {\r\n                    throw new Error('tableHTMLExport must be called on a <table> element')\r\n                }\r\n\r\n                if (table.length > 1) {\r\n                    throw new Error('converting multiple table elements at once is not supported yet')\r\n                }\r\n\r\n                dataMe = toCsv(table);\r\n\r\n                if (defaults.consoleLog) {\r\n                    console.log(dataMe);\r\n                }\r\n\r\n                download(options.filename, dataMe);\r\n\r\n\r\n                //var base64data = \"base64,\" + $.base64.encode(tdData);\r\n                //window.open('data:application/'+defaults.type+';filename=exportData;' + base64data);\r\n            } else if (options.type == 'json') {\r\n\r\n                var jsonExportArray = toJson(el);\r\n\r\n                if (defaults.consoleLog) {\r\n                    console.log(JSON.stringify(jsonExportArray));\r\n                }\r\n                dataMe = JSON.stringify(jsonExportArray);\r\n\r\n                download(options.filename, dataMe)\r\n                /*\r\n                var base64data = \"base64,\" + $.base64.encode(JSON.stringify(jsonExportArray));\r\n                window.open('data:application/json;filename=exportData;' + base64data);*/\r\n            }\r\n            return this;\r\n        }\r\n    });\r\n})(jQuery);\r\n\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => module['default'] :\n\t\t() => module;\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)"],"sourceRoot":""}