.gswpts_create_table_container {
	margin-right: 20px;

	* {
		font-family: $font-family;
	}

	a {
		cursor: pointer;
		color: $link-color;
		transition: color 0.1s ease-in-out;

		&:hover {
			color: $link-hover-color;
		}
	}

	.gswpts_table_loader {
		min-height: 450px;
		width: 100% !important;
	}

	#gswpts_tables_container .ui.stackable.grid {
		margin: 0;

		.row {
			width: 105% !important;
		}
	}

	#manage_tables_paginate>div {
		padding-top: 0 !important;
	}

	#manage_tables th,
	#manage_tables td {
		vertical-align: middle;
	}

	.input_fields {
		.ui.search.dropdown.selection {
			width: 100%;
		}

		.ui.icon.input {
			width: 100%;
		}
	}

	#table_type {
		z-index: 20;

		i {
			color: $link-hover-color;
			margin-right: 5px;
		}
	}

	#spreadsheet_container .ui.stackable.grid {
		margin: 0;

		.row {
			width: 105% !important;
		}

		#create_tables th,
		#create_tables td {
			vertical-align: middle;
		}
	}

	#spreadsheet_container {
		#create_tables_wrapper {
			width: 100% !important;
		}

		table {
			width: 100%;

			th,
			td {
				max-width: 200px;
				overflow-wrap: break-word;
			}

			th:focus {
				outline: none;
			}
		}

		#create_tables_paginate>div {
			padding-top: 0 !important;
		}

		.dt-buttons {
			display: flex;
			justify-content: flex-end;
			margin-top: 5px;

			button {
				font-size: 13px;
				margin: 0 5px;
			}
		}

		#filtering_input {
			display: flex;
			justify-content: space-between;
			align-items: center;
			margin: 15px 0 5px 0;

			#create_tables_length {
				margin-right: auto;
			}

			#create_tables_filter {
				margin-left: auto;
			}
		}

		#bottom_options {
			display: flex;
			justify-content: space-between;
			align-items: center;
			margin-top: 10px;

			.dataTables_info {
				padding-top: 0 !important;
				margin-right: auto;
			}

			#create_tables_paginate {
				margin-left: auto;
			}
		}
	}
}

#gswpts_tabs {
	/* colors */
	$blue: $link-color;
	$red: #ff4a53;
	$dark: #333;
	$accent: $blue;
	$accent-inactive: desaturate($accent, 85%);
	$secondary: $accent-inactive;
	/* tab setting */
	$tab-count: 4;
	$indicator-width: 50px;
	$indicator-height: 4px;
	/* breakpoints */
	$breakpoints: (medium: #{$tab-count * 250px}, small: #{$tab-count * 150px}, );
	/* selectors relative to radio inputs */
	$label-selector: "~ ul > li";
	$slider-selector: "~ .slider";
	$content-selector: "~ .content > section";

	@mixin tabs($label-selector: $label-selector, $slider-selector: $slider-selector, $content-selector: $content-selector) {
		@for $i from 1 through $tab-count {
			&:nth-of-type(#{$i}):checked {
				#{$label-selector}:nth-child(#{$i}) {
					@content;
				}

				#{$slider-selector} {
					transform: translateX(#{100% * ($i - 1)});
				}

				#{$content-selector}:nth-child(#{$i}) {
					display: block;
				}
			}
		}
	}

	.tabs {
		padding: 20px;
		width: 100%;
		background-color: $bg-color;
		border-radius: $border-radious;
		min-width: #{$tab-count * 60px};

		input[name="tab-control"] {
			display: none;
		}

		.content section h2,
		ul li label {
			font-weight: bold;
			font-size: 18px;
			color: $accent;
		}

		ul {
			list-style-type: none;
			padding-left: 0;
			display: flex;
			flex-direction: row;
			margin-bottom: 10px;
			justify-content: space-between;
			align-items: flex-end;
			flex-wrap: wrap;

			li {
				box-sizing: border-box;
				flex: 1;
				width: #{100% / $tab-count};
				padding: 0 10px;
				text-align: center;

				label {
					transition: all 0.3s ease-in-out;
					color: $secondary;
					padding: 5px auto;
					overflow: hidden;
					text-overflow: ellipsis;
					display: block;
					cursor: pointer;
					transition: all 0.2s ease-in-out;
					white-space: nowrap;
					-webkit-touch-callout: none;

					br {
						display: none;
					}

					svg {
						fill: $secondary;
						height: 1.2em;
						vertical-align: bottom;
						margin-right: 0.2em;
						transition: all 0.2s ease-in-out;
					}

					&:hover,
					&:focus,
					&:active {
						outline: 0;
						color: lighten($secondary, 15%);

						svg {
							fill: lighten($secondary, 15%);
						}
					}
				}
			}
		}

		.slider {
			position: relative;
			width: #{100% / $tab-count};
			transition: all 0.33s cubic-bezier(0.38, 0.8, 0.32, 1.07);

			.indicator {
				position: relative;
				width: $indicator-width;
				max-width: 100%;
				margin: 0 auto;
				height: $indicator-height;
				background: $accent;
				border-radius: 1px;
			}
		}

		.content {
			margin-top: 25px;

			section {
				display: none;

				animation: {
					name: content;
					direction: normal;
					duration: 0.3s;
					timing-function: ease-in-out;
					iteration-count: 1;
				}

				line-height: 1.4;

				h2 {
					color: $accent;
					display: none;

					&::after {
						content: "";
						position: relative;
						display: block;
						width: 30px;
						height: 3px;
						background: $accent;
						margin-top: 5px;
						left: 1px;
					}
				}
			}
		}

		input[name="tab-control"] {
			@include tabs {
				>label {
					cursor: default;
					color: $accent;

					svg {
						fill: $accent;
					}

					@media (max-width: map-get($breakpoints, small)) {
						background: rgba(0, 0, 0, 0.08);
					}
				}
			}
		}

		@keyframes content {
			from {
				opacity: 0;
				transform: translateY(5%);
			}

			to {
				opacity: 1;
				transform: translateY(0%);
			}
		}

		@media (max-width: map-get($breakpoints, medium)) {
			ul li label {
				white-space: initial;

				br {
					display: initial;
				}

				svg {
					height: 1.5em;
				}
			}
		}

		@media (max-width: map-get($breakpoints, small)) {
			ul li label {
				padding: 5px;
				border-radius: 5px;

				span {
					display: none;
				}
			}

			.slider {
				display: none;
			}

			.content {
				margin-top: 20px;

				section h2 {
					display: block;
				}
			}
		}
	}

	#display_settings,
	#sort_filter,
	#table_tools {
		.content {
			margin-top: 5px;

			.ui.dropdown {
				width: 100%;
				margin-top: 8px;

				.ui.label {
					background-color: $link-hover-color;
					color: #fff;
				}
			}
		}

		.ui.toggle.checkbox {
			display: flex;
			justify-content: center;
			flex-direction: column;
			align-items: center;
			margin-bottom: 8px;

			input {
				visibility: hidden;
			}

			label {
				cursor: pointer;
			}

			input:checked~.box:before,
			input:checked~label:before {
				background-color: $link-color !important;
			}
		}
	}

	.disabled_checkbox *,
	.disabled_checkbox>label {
		cursor: not-allowed !important;
	}
}